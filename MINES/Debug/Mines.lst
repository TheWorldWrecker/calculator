SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\hojooni\OneDrive\¹®¼­\CASIO\fx-9860G SDK\MINES\Mines.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Mines.c     1    /*****************************************************************/
         Mines.c     2    /*                                                               */
         Mines.c     3    /*   CASIO fx-9860G SDK Library                                  */
         Mines.c     4    /*                                                               */
         Mines.c     5    /*   File name : [ProjectName].c                                 */
         Mines.c     6    /*                                                               */
         Mines.c     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
         Mines.c     8    /*                                                               */
         Mines.c     9    /*****************************************************************/
         Mines.c    10    
         Mines.c    11    #include "fxlib.h"
         Mines.c    12    #include "timer.h"
         Mines.c    13    
         Mines.c    14    
         Mines.c    15    //****************************************************************************
         Mines.c    16    //  AddIn_main (Sample program main function)
         Mines.c    17    //
         Mines.c    18    //  param   :   isAppli   : 1 = This application is launched by MAIN MENU.
         Mines.c    19    //                        : 0 = This application is launched by a strip in eACT application.
         Mines.c    20    //
         Mines.c    21    //              OptionNum : Strip number (0~3)
         Mines.c    22    //                         (This parameter is only used when isAppli parameter is 0.)
         Mines.c    23    //
         Mines.c    24    //  retval  :   1 = No error / 0 = Error
         Mines.c    25    //
         Mines.c    26    //****************************************************************************
         Mines.c    27    
         Mines.c    28    unsigned int rSeed = 0;
         Mines.c    29    
         Mines.c    30    int time = 0;  // in 0.1 secs
         Mines.c    31    int width;
         Mines.c    32    int height;
         Mines.c    33    int totalMines;
         Mines.c    34    int minCamX; int minCamY;
         Mines.c    35    int maxCamX;
         Mines.c    36    int maxCamY;
         Mines.c    37    int camX; int camY;  // Position of center
         Mines.c    38    int cursorX; int cursorY;
         Mines.c    39    unsigned int key;
         Mines.c    40    int started = 0;
         Mines.c    41    int dead = 0;
         Mines.c    42    int won = 0;
         Mines.c    43    int flags = 0;
         Mines.c    44    int cellsOpened = 0;
         Mines.c    45    
         Mines.c    46    int board[30][30];  // No dynamic memory :(   pretend its [width][height]
         Mines.c    47    int revealed[30][30];  // 0 = hidden, 1 = revealed, 2 = flagged
         Mines.c    48    
         Mines.c    49    
         Mines.c    50    
         Mines.c    51    // Wall of hex lmao
         Mines.c    52    GRAPHDATA graphs[16] = {
         Mines.c    53        {10, 10, (unsigned char*)  // 0
         Mines.c    54        "\xFF\xC0\x80\x40\x80\x40\x80\x40\x80\x40\x80\x40\x80\x40\x80\x40"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Mines.c    55        "\x80\x40\xFF\xC0"},
         Mines.c    56        {10, 10, (unsigned char*)  // 1
         Mines.c    57        "\xFF\xC0\x80\x40\x8C\x40\x84\x40\x84\x40\x84\x40\x84\x40\x8E\x40"
         Mines.c    58        "\x80\x40\xFF\xC0"},
         Mines.c    59        {10, 10, (unsigned char*)  // 2
         Mines.c    60        "\xFF\xC0\x80\x40\x8C\x40\x92\x40\x82\x40\x84\x40\x88\x40\x9E\x40"
         Mines.c    61        "\x80\x40\xFF\xC0"},
         Mines.c    62        {10, 10, (unsigned char*)  // 3
         Mines.c    63        "\xFF\xC0\x80\x40\x9E\x40\x82\x40\x8C\x40\x82\x40\x92\x40\x8C\x40"
         Mines.c    64        "\x80\x40\xFF\xC0"},
         Mines.c    65        {10, 10, (unsigned char*)  // 4
         Mines.c    66        "\xFF\xC0\x80\x40\x90\x40\x94\x40\x94\x40\x9E\x40\x84\x40\x84\x40"
         Mines.c    67        "\x80\x40\xFF\xC0"},
         Mines.c    68        {10, 10, (unsigned char*)  // 5
         Mines.c    69        "\xFF\xC0\x80\x40\x9E\x40\x90\x40\x9C\x40\x82\x40\x92\x40\x8C\x40"
         Mines.c    70        "\x80\x40\xFF\xC0"},
         Mines.c    71        {10, 10, (unsigned char*)  // 6
         Mines.c    72        "\xFF\xC0\x80\x40\x8C\x40\x92\x40\x90\x40\x9C\x40\x92\x40\x8C\x40"
         Mines.c    73        "\x80\x40\xFF\xC0"},
         Mines.c    74        {10, 10, (unsigned char*)  // 7
         Mines.c    75        "\xFF\xC0\x80\x40\x9E\x40\x92\x40\x92\x40\x84\x40\x84\x40\x84\x40"
         Mines.c    76        "\x80\x40\xFF\xC0"},
         Mines.c    77        {10, 10, (unsigned char*)  // 8
         Mines.c    78        "\xFF\xC0\x80\x40\x8C\x40\x92\x40\x8C\x40\x92\x40\x92\x40\x8C\x40"
         Mines.c    79        "\x80\x40\xFF\xC0"},
         Mines.c    80        {10, 10, (unsigned char*)  // Mine (9)
         Mines.c    81        "\xFF\xC0\x80\x40\xAD\x40\x9E\x40\xB7\x40\xBF\x40\x9E\x40\xAD\x40"
         Mines.c    82        "\x80\x40\xFF\xC0"},
         Mines.c    83        {10, 10, (unsigned char*)  // Flag (10)
         Mines.c    84        "\xFF\xC0\xFF\xC0\xF1\xC0\xE1\xC0\xF1\xC0\xFD\xC0\xFD\xC0\xE0\xC0"
         Mines.c    85        "\xFF\xC0\xFF\xC0"},
         Mines.c    86        {10, 10, (unsigned char*)   // Wrong flag (11)
         Mines.c    87        "\xFF\xC0\xBF\x40\xD0\xC0\xE1\xC0\xF1\xC0\xF1\xC0\xED\xC0\xC0\xC0"
         Mines.c    88        "\xBF\x40\xFF\xC0"},
         Mines.c    89        {10, 10, (unsigned char*)   // Checkerboard (12)
         Mines.c    90        "\xFF\xC0\xAA\xC0\xD5\x40\xAA\xC0\xD5\x40\xAA\xC0\xD5\x40\xAA\xC0"
         Mines.c    91        "\xD5\x40\xFF\xC0"},
         Mines.c    92        {17, 11, (unsigned char*)  // Mine counter outline (13)
         Mines.c    93        "\x7F\xFF\x00\xE0\x03\x80\xC0\x01\x80\x80\x00\x80\x80\x00\x80\x80"
         Mines.c    94        "\x00\x80\x80\x00\x80\x80\x00\x80\xC0\x01\x80\xE0\x03\x80\x7F\xFF\x00"},
         Mines.c    95        {5, 8, (unsigned char*)  // Timer (14)
         Mines.c    96        "\xF8\x88\xF8\x70\x20\x50\xF8\xF8"},
         Mines.c    97        {6, 6, (unsigned char*)  // Mine no outline (15)
         Mines.c    98        "\xB4\x78\xDC\xFC\x78\xB4"}
         Mines.c    99    };
         Mines.c   100    
         Mines.c   101    void itoa(char* str, int n) {
P   00000000              _itoa:                           ; function: itoa
                                                           ; frame size=12
                                                           ; used runtime library name:
                                                           ; __divls, __modls
    00000000 2FE6                   MOV.L       R14,@-R15
         Mines.c   102        int i = 0;
         Mines.c   103        int j = 0;
         Mines.c   104        char temp;
         Mines.c   105        char isNegative = 0;
         Mines.c   106        if(n < 0) {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000002 4511                   CMP/PZ      R5
    00000004 2FD6                   MOV.L       R13,@-R15
    00000006 EE00                   MOV         #0,R14
    00000008 4F22                   STS.L       PR,@-R15
    0000000A 67E3                   MOV         R14,R7
    0000000C 8D02                   BT/S        L639
    0000000E 6DE3                   MOV         R14,R13
         Mines.c   107            isNegative = 1;
    00000010 ED01                   MOV         #1,R13
         Mines.c   108            n = -n;
    00000012 655B                   NEG         R5,R5
    00000014              L639:                             
    00000014 E60A                   MOV         #10,R6
         Mines.c   109        }
         Mines.c   110        do {
    00000016              L640:                             
         Mines.c   111            str[i++] = n%10 + '0';
    00000016 6273                   MOV         R7,R2
    00000018 D361                   MOV.L       L778,R3    ; __modls
    0000001A 6153                   MOV         R5,R1
    0000001C 7701                   ADD         #1,R7
    0000001E 324C                   ADD         R4,R2
    00000020 430B                   JSR         @R3
    00000022 6063                   MOV         R6,R0
    00000024 7030                   ADD         #48,R0
    00000026 2200                   MOV.B       R0,@R2
         Mines.c   112            n /= 10;
    00000028 D25E                   MOV.L       L778+4,R2  ; __divls
    0000002A 6063                   MOV         R6,R0
    0000002C 420B                   JSR         @R2
    0000002E 6153                   MOV         R5,R1
    00000030 6503                   MOV         R0,R5
         Mines.c   113        } while(n > 0);
    00000032 4515                   CMP/PL      R5
    00000034 89EF                   BT          L640
         Mines.c   114        if(isNegative) {
    00000036 6DDE                   EXTS.B      R13,R13
    00000038 2DD8                   TST         R13,R13
    0000003A 8903                   BT          L641
         Mines.c   115            str[i++] = '-';
    0000003C 6073                   MOV         R7,R0
    0000003E 7701                   ADD         #1,R7
    00000040 E32D                   MOV         #45,R3
    00000042 0434                   MOV.B       R3,@(R0,R4)
    00000044              L641:                             
         Mines.c   116        }
         Mines.c   117        str[i] = '\0';
    00000044 6073                   MOV         R7,R0
         Mines.c   118        for(j = 0; j < i/2; ++j) {
    00000046 66E3                   MOV         R14,R6
    00000048 04E4                   MOV.B       R14,@(R0,R4)
    0000004A 6503                   MOV         R0,R5
    0000004C 75FF                   ADD         #-1,R5
    0000004E E300                   MOV         #0,R3
    00000050 3377                   CMP/GT      R7,R3
    00000052 373E                   ADDC        R3,R7
    00000054 4721                   SHAR        R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000056 4715                   CMP/PL      R7
    00000058 8F09                   BF/S        L642
    0000005A 354C                   ADD         R4,R5
    0000005C              L643:                             
         Mines.c   119            temp = str[j];
    0000005C 6E40                   MOV.B       @R4,R14
    0000005E 7601                   ADD         #1,R6
         Mines.c   120            str[j] = str[i-j-1];
    00000060 6350                   MOV.B       @R5,R3
    00000062 3673                   CMP/GE      R7,R6
    00000064 2430                   MOV.B       R3,@R4
         Mines.c   121            str[i-j-1] = temp;
    00000066 25E0                   MOV.B       R14,@R5
    00000068 75FF                   ADD         #-1,R5
    0000006A 8FF7                   BF/S        L643
    0000006C 7401                   ADD         #1,R4
    0000006E              L642:                             
         Mines.c   122        }
         Mines.c   123    }
    0000006E 4F26                   LDS.L       @R15+,PR
    00000070 6DF6                   MOV.L       @R15+,R13
    00000072 000B                   RTS
    00000074 6EF6                   MOV.L       @R15+,R14
         Mines.c   124    
         Mines.c   125    void itoa_two_digits(char* str, int n) {
    00000076              _itoa_two_digits:                ; function: itoa_two_digits
                                                           ; frame size=12
                                                           ; used runtime library name:
                                                           ; __divls, __modls
         Mines.c   126        int i = 0;
         Mines.c   127        int j, k;
         Mines.c   128        char isNegative = 0;
         Mines.c   129        if(n < 0) {
    00000076 4511                   CMP/PZ      R5
    00000078 2FE6                   MOV.L       R14,@-R15
    0000007A EE00                   MOV         #0,R14
    0000007C 2FD6                   MOV.L       R13,@-R15
    0000007E 66E3                   MOV         R14,R6
    00000080 4F22                   STS.L       PR,@-R15
    00000082 8D02                   BT/S        L644
    00000084 6DE3                   MOV         R14,R13
         Mines.c   130            isNegative = 1;
    00000086 ED01                   MOV         #1,R13
         Mines.c   131            n = -n;
    00000088 655B                   NEG         R5,R5
    0000008A              L644:                             
    0000008A E70A                   MOV         #10,R7
         Mines.c   132        }
         Mines.c   133        // Convert number to string in reverse order
         Mines.c   134        do {
    0000008C              L645:                             
         Mines.c   135            str[i++] = n % 10 + '0';
    0000008C D344                   MOV.L       L778,R3    ; __modls
    0000008E 6263                   MOV         R6,R2
    00000090 7601                   ADD         #1,R6
    00000092 324C                   ADD         R4,R2
    00000094 6153                   MOV         R5,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000096 430B                   JSR         @R3
    00000098 6073                   MOV         R7,R0
    0000009A 7030                   ADD         #48,R0
    0000009C 2200                   MOV.B       R0,@R2
         Mines.c   136            n /= 10;
    0000009E 6073                   MOV         R7,R0
    000000A0 D240                   MOV.L       L778+4,R2  ; __divls
    000000A2 420B                   JSR         @R2
    000000A4 6153                   MOV         R5,R1
    000000A6 6503                   MOV         R0,R5
         Mines.c   137        } while(n > 0);
    000000A8 4515                   CMP/PL      R5
    000000AA 89EF                   BT          L645
         Mines.c   138        // Add leading zero if necessary to ensure two digits
         Mines.c   139        if(i == 1) {
    000000AC 6063                   MOV         R6,R0
    000000AE 8801                   CMP/EQ      #1,R0
    000000B0 8F04                   BF/S        L646
         Mines.c   140            str[i++] = '0'; // Add leading zero for numbers less than 10
         Mines.c   141        }
         Mines.c   142        if(isNegative) {
    000000B2 6DDE                   EXTS.B      R13,R13
    000000B4 6063                   MOV         R6,R0
    000000B6 7601                   ADD         #1,R6
    000000B8 E330                   MOV         #48,R3
    000000BA 0434                   MOV.B       R3,@(R0,R4)
    000000BC              L646:                             
    000000BC 2DD8                   TST         R13,R13
    000000BE 8903                   BT          L647
         Mines.c   143            str[i++] = '-'; // This will not be used for fixed two digits positive numbers
    000000C0 6063                   MOV         R6,R0
    000000C2 7601                   ADD         #1,R6
    000000C4 E32D                   MOV         #45,R3
    000000C6 0434                   MOV.B       R3,@(R0,R4)
    000000C8              L647:                             
         Mines.c   144        }
         Mines.c   145        str[i] = '\0';
    000000C8 6063                   MOV         R6,R0
         Mines.c   146        // Reverse the string to correct order
         Mines.c   147        for(j = 0, k = i - 1; j < k; j++, k--) {
    000000CA 6503                   MOV         R0,R5
    000000CC 04E4                   MOV.B       R14,@(R0,R4)
    000000CE 75FF                   ADD         #-1,R5
    000000D0 4515                   CMP/PL      R5
    000000D2 8F0C                   BF/S        L648
    000000D4 67E3                   MOV         R14,R7
    000000D6              L649:                             
         Mines.c   148            char temp = str[j];
    000000D6 6673                   MOV         R7,R6
    000000D8 364C                   ADD         R4,R6
         Mines.c   149            str[j] = str[k];
    000000DA 6E53                   MOV         R5,R14
    000000DC 6D60                   MOV.B       @R6,R13
    000000DE 7701                   ADD         #1,R7
    000000E0 3E4C                   ADD         R4,R14
    000000E2 75FF                   ADD         #-1,R5
    000000E4 63E0                   MOV.B       @R14,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000E6 3753                   CMP/GE      R5,R7
    000000E8 2630                   MOV.B       R3,@R6
    000000EA 8FF4                   BF/S        L649
         Mines.c   150            str[k] = temp;
    000000EC 2ED0                   MOV.B       R13,@R14
    000000EE              L648:                             
         Mines.c   151        }
         Mines.c   152    }
    000000EE 4F26                   LDS.L       @R15+,PR
    000000F0 6DF6                   MOV.L       @R15+,R13
    000000F2 000B                   RTS
    000000F4 6EF6                   MOV.L       @R15+,R14
         Mines.c   153    
         Mines.c   154    void drawUI(int board[30][30], int revealed[30][30], int minesLeft,
    000000F6              _drawUI:                         ; function: drawUI
                                                           ; frame size=116
                                                           ; used runtime library name:
                                                           ; __divls, __modls, __quick_odd_mvn
    000000F6 E074                   MOV         #116,R0
    000000F8 2FE6                   MOV.L       R14,@-R15
    000000FA 2FD6                   MOV.L       R13,@-R15
    000000FC 2FC6                   MOV.L       R12,@-R15
    000000FE 6C63                   MOV         R6,R12
    00000100 2FB6                   MOV.L       R11,@-R15
         Mines.c   155     int width, int height, int cx, int cy) {
         Mines.c   156        int i; int j;
         Mines.c   157        DISPBOX box;
         Mines.c   158        DISPGRAPH graph;
         Mines.c   159        char str[20];
         Mines.c   160        const int mcDigits = (minesLeft >= 0)
         Mines.c   161            ? 1 + (minesLeft >= 10) + (minesLeft >= 100)
         Mines.c   162            : 2 + (minesLeft <= -10) + (minesLeft <= -100) ;
    00000102 4C11                   CMP/PZ      R12
    00000104 2FA6                   MOV.L       R10,@-R15
    00000106 2F96                   MOV.L       R9,@-R15
    00000108 2F86                   MOV.L       R8,@-R15
    0000010A 4F22                   STS.L       PR,@-R15
    0000010C 4F12                   STS.L       MACL,@-R15
    0000010E 7FB0                   ADD         #-80,R15
    00000110 1F54                   MOV.L       R5,@(16,R15)
    00000112 1F72                   MOV.L       R7,@(8,R15)
    00000114 8F09                   BF/S        L650
    00000116 08FE                   MOV.L       @(R0,R15),R8
    00000118 E30A                   MOV         #10,R3
    0000011A 3C33                   CMP/GE      R3,R12
    0000011C 0429                   MOVT        R4
    0000011E E264                   MOV         #100,R2
    00000120 3C23                   CMP/GE      R2,R12
    00000122 0029                   MOVT        R0
    00000124 340C                   ADD         R0,R4
    00000126 A00B                   BRA         L651
    00000128 7401                   ADD         #1,R4
    0000012A              L650:                             
    0000012A E3F6                   MOV         #-10,R3
    0000012C 3C37                   CMP/GT      R3,R12
    0000012E 0429                   MOVT        R4
    00000130 74FF                   ADD         #-1,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000132 644B                   NEG         R4,R4
    00000134 E29C                   MOV         #-100,R2
    00000136 3C27                   CMP/GT      R2,R12
    00000138 0029                   MOVT        R0
    0000013A CA01                   XOR         #1,R0
    0000013C 340C                   ADD         R0,R4
    0000013E 7402                   ADD         #2,R4
    00000140              L651:                             
         Mines.c   163        const int mineCountX = 15+(4-mcDigits)*2;
    00000140 E204                   MOV         #4,R2
    00000142 3248                   SUB         R4,R2
    00000144 4200                   SHLL        R2
    00000146 720F                   ADD         #15,R2
    00000148 2F22                   MOV.L       R2,@R15
         Mines.c   164        const int mmX = 18-(width-1)/2;
    0000014A E100                   MOV         #0,R1
    0000014C 53F2                   MOV.L       @(8,R15),R3
    0000014E EB12                   MOV         #18,R11
    00000150 73FF                   ADD         #-1,R3
    00000152 3137                   CMP/GT      R3,R1
    00000154 331E                   ADDC        R1,R3
    00000156 4321                   SHAR        R3
    00000158 3B38                   SUB         R3,R11
         Mines.c   165        const int mmY = 42-(height-1)/2;
    0000015A 6383                   MOV         R8,R3
    0000015C 73FF                   ADD         #-1,R3
    0000015E 3137                   CMP/GT      R3,R1
    00000160 331E                   ADDC        R1,R3
    00000162 4321                   SHAR        R3
    00000164 EA2A                   MOV         #42,R10
    00000166 3A38                   SUB         R3,R10
         Mines.c   166        graph.WriteModify = IMB_WRITEMODIFY_NORMAL;
    00000168 E401                   MOV         #1,R4
    0000016A E03C                   MOV         #60,R0
    0000016C 0F44                   MOV.B       R4,@(R0,R15)
         Mines.c   167        graph.WriteKind = IMB_WRITEKIND_OVER;
         Mines.c   168    
         Mines.c   169        box.left = 0;
    0000016E 6313                   MOV         R1,R3
    00000170 E03D                   MOV         #61,R0
    00000172 0F44                   MOV.B       R4,@(R0,R15)
    00000174 E040                   MOV         #64,R0
    00000176 0F36                   MOV.L       R3,@(R0,R15)
         Mines.c   170        box.top = 0;
    00000178 E044                   MOV         #68,R0
         Mines.c   171        box.right = 39;
    0000017A E327                   MOV         #39,R3
    0000017C 0F16                   MOV.L       R1,@(R0,R15)
    0000017E E048                   MOV         #72,R0
    00000180 0F36                   MOV.L       R3,@(R0,R15)
         Mines.c   172        box.bottom = 63;
    00000182 E13F                   MOV         #63,R1
         Mines.c   173        Bdisp_AreaClr_VRAM(&box);
    00000184 D308                   MOV.L       L778+8,R3  ; _Bdisp_AreaClr_VRAM
    00000186 E04C                   MOV         #76,R0
    00000188 0F16                   MOV.L       R1,@(R0,R15)
    0000018A 64F3                   MOV         R15,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000018C 430B                   JSR         @R3
    0000018E 7440                   ADD         #64,R4
         Mines.c   174    
         Mines.c   175        for(i = 0; i<64; ++i) {
    00000190 DD06                   MOV.L       L778+12,R13; _Bdisp_DrawLineVRAM
    00000192 E900                   MOV         #0,R9
    00000194 6E93                   MOV         R9,R14
    00000196              L652:                             
         Mines.c   176            if(!(i%2)) {
    00000196 60E3                   MOV         R14,R0
    00000198 4011                   CMP/PZ      R0
    0000019A 8B09                   BF          L654
    0000019C A00D                   BRA         L655
    0000019E C901                   AND         #1,R0
    000001A0              L778:                             
    000001A0 <00000000>             .DATA.L     __modls
    000001A4 <00000000>             .DATA.L     __divls
    000001A8 <00000000>             .DATA.L     _Bdisp_AreaClr_VRAM
    000001AC <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    000001B0              L654:                             
    000001B0 6007                   NOT         R0,R0
    000001B2 7001                   ADD         #1,R0
    000001B4 C901                   AND         #1,R0
    000001B6 6007                   NOT         R0,R0
    000001B8 7001                   ADD         #1,R0
    000001BA              L655:                             
    000001BA 2008                   TST         R0,R0
    000001BC 8B04                   BF          L653
         Mines.c   177                Bdisp_DrawLineVRAM(38, i, 39, i);
    000001BE 67E3                   MOV         R14,R7
    000001C0 E627                   MOV         #39,R6
    000001C2 65E3                   MOV         R14,R5
    000001C4 4D0B                   JSR         @R13
    000001C6 E426                   MOV         #38,R4
    000001C8              L653:                             
    000001C8 7E01                   ADD         #1,R14
    000001CA E240                   MOV         #64,R2
    000001CC 3E23                   CMP/GE      R2,R14
    000001CE 8BE2                   BF          L652
         Mines.c   178            }
         Mines.c   179        }
         Mines.c   180    
         Mines.c   181        // Erases random black line at the left
         Mines.c   182        // I think it's caused when I draw the graph slightly OOB to the right
         Mines.c   183        // it loops around to the left
         Mines.c   184        // Too lazy to fix it so I just erase it and pretend it's not there
         Mines.c   185        Bdisp_ClearLineVRAM(0, 0, 0, 63);
    000001D0 D253                   MOV.L       L779+4,R2  ; _Bdisp_ClearLineVRAM
    000001D2 E73F                   MOV         #63,R7
    000001D4 E600                   MOV         #0,R6
    000001D6 6563                   MOV         R6,R5
    000001D8 420B                   JSR         @R2
    000001DA 6463                   MOV         R6,R4
         Mines.c   186    
         Mines.c   187        // Draw mine icon
         Mines.c   188        box.left = 5;
    000001DC E305                   MOV         #5,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001DE E040                   MOV         #64,R0
    000001E0 0F36                   MOV.L       R3,@(R0,R15)
         Mines.c   189        box.top = 4;
    000001E2 E204                   MOV         #4,R2
    000001E4 E044                   MOV         #68,R0
         Mines.c   190        box.right = 14;
    000001E6 EE0E                   MOV         #14,R14
    000001E8 0F26                   MOV.L       R2,@(R0,R15)
         Mines.c   191        box.bottom = 13;
    000001EA E30D                   MOV         #13,R3
    000001EC E048                   MOV         #72,R0
         Mines.c   192        graph.x = 5;
    000001EE E205                   MOV         #5,R2
    000001F0 0FE6                   MOV.L       R14,@(R0,R15)
         Mines.c   193        graph.y = 4;
         Mines.c   194        graph.GraphData = graphs[15];
    000001F2 61F3                   MOV         R15,R1
    000001F4 E04C                   MOV         #76,R0
    000001F6 7130                   ADD         #48,R1
    000001F8 0F36                   MOV.L       R3,@(R0,R15)
    000001FA E304                   MOV         #4,R3
    000001FC 1F2A                   MOV.L       R2,@(40,R15)
    000001FE 1F3B                   MOV.L       R3,@(44,R15)
    00000200 D248                   MOV.L       L779+8,R2  ; H'000000B4+_graphs
    00000202 D349                   MOV.L       L779+12,R3 ; __quick_odd_mvn
    00000204 430B                   JSR         @R3
    00000206 E00C                   MOV         #12,R0
         Mines.c   195        Bdisp_WriteGraph_VRAM(&graph);
    00000208 D248                   MOV.L       L779+16,R2 ; _Bdisp_WriteGraph_VRAM
    0000020A 64F3                   MOV         R15,R4
    0000020C 420B                   JSR         @R2
    0000020E 7428                   ADD         #40,R4
         Mines.c   196    
         Mines.c   197        // Draw mine counter
         Mines.c   198        box.left = 14;
    00000210 E040                   MOV         #64,R0
         Mines.c   199        box.top = 2;
    00000212 E402                   MOV         #2,R4
    00000214 0FE6                   MOV.L       R14,@(R0,R15)
         Mines.c   200        box.right = 30;
    00000216 E31E                   MOV         #30,R3
    00000218 E044                   MOV         #68,R0
         Mines.c   201        box.bottom = 13;
    0000021A E20D                   MOV         #13,R2
    0000021C 0F46                   MOV.L       R4,@(R0,R15)
         Mines.c   202        graph.x = 14;
         Mines.c   203        graph.y = 2;
         Mines.c   204        graph.GraphData = graphs[13];
    0000021E 61F3                   MOV         R15,R1
    00000220 E048                   MOV         #72,R0
    00000222 7130                   ADD         #48,R1
    00000224 0F36                   MOV.L       R3,@(R0,R15)
    00000226 E04C                   MOV         #76,R0
    00000228 D33F                   MOV.L       L779+12,R3 ; __quick_odd_mvn
    0000022A 0F26                   MOV.L       R2,@(R0,R15)
    0000022C 1FEA                   MOV.L       R14,@(40,R15)
    0000022E 1F4B                   MOV.L       R4,@(44,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000230 D23F                   MOV.L       L779+20,R2 ; H'0000009C+_graphs
    00000232 430B                   JSR         @R3
    00000234 E00C                   MOV         #12,R0
         Mines.c   205        Bdisp_WriteGraph_VRAM(&graph);
    00000236 64F3                   MOV         R15,R4
    00000238 D23C                   MOV.L       L779+16,R2 ; _Bdisp_WriteGraph_VRAM
    0000023A 420B                   JSR         @R2
    0000023C 7428                   ADD         #40,R4
         Mines.c   206    
         Mines.c   207        // Draw timer icon
         Mines.c   208        box.left = 3;
    0000023E E403                   MOV         #3,R4
    00000240 E040                   MOV         #64,R0
         Mines.c   209        box.top = 14;
         Mines.c   210        box.right = 9;
    00000242 E309                   MOV         #9,R3
    00000244 0F46                   MOV.L       R4,@(R0,R15)
         Mines.c   211        box.bottom = 20;
    00000246 E214                   MOV         #20,R2
    00000248 E044                   MOV         #68,R0
         Mines.c   212        graph.x = 3;
         Mines.c   213        graph.y = 14;
         Mines.c   214        graph.GraphData = graphs[14];
    0000024A 61F3                   MOV         R15,R1
    0000024C 0FE6                   MOV.L       R14,@(R0,R15)
    0000024E 7130                   ADD         #48,R1
    00000250 E048                   MOV         #72,R0
    00000252 0F36                   MOV.L       R3,@(R0,R15)
    00000254 D334                   MOV.L       L779+12,R3 ; __quick_odd_mvn
    00000256 E04C                   MOV         #76,R0
    00000258 0F26                   MOV.L       R2,@(R0,R15)
    0000025A 1F4A                   MOV.L       R4,@(40,R15)
    0000025C 1FEB                   MOV.L       R14,@(44,R15)
    0000025E D235                   MOV.L       L779+24,R2 ; H'000000A8+_graphs
    00000260 430B                   JSR         @R3
    00000262 E00C                   MOV         #12,R0
         Mines.c   215        Bdisp_WriteGraph_VRAM(&graph);
    00000264 D231                   MOV.L       L779+16,R2 ; _Bdisp_WriteGraph_VRAM
    00000266 64F3                   MOV         R15,R4
    00000268 420B                   JSR         @R2
    0000026A 7428                   ADD         #40,R4
         Mines.c   216    
         Mines.c   217        // Draw mine counter number
         Mines.c   218        itoa(str, minesLeft);
    0000026C 6EF3                   MOV         R15,R14
    0000026E 7E14                   ADD         #20,R14
    00000270 65C3                   MOV         R12,R5
    00000272 BEC5                   BSR         _itoa
    00000274 64E3                   MOV         R14,R4
         Mines.c   219        PrintMini(mineCountX, 5, str, 0);
    00000276 E700                   MOV         #0,R7
    00000278 D32F                   MOV.L       L779+28,R3 ; _PrintMini
    0000027A 66E3                   MOV         R14,R6
    0000027C E505                   MOV         #5,R5
    0000027E 430B                   JSR         @R3
    00000280 64F2                   MOV.L       @R15,R4
         Mines.c   220    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Mines.c   221        // Draw timer
         Mines.c   222        if(!started) {
    00000282 DC2E                   MOV.L       L779+32,R12; _time
    00000284 D32E                   MOV.L       L779+36,R3 ; _started
    00000286 6232                   MOV.L       @R3,R2
    00000288 2228                   TST         R2,R2
    0000028A 8B00                   BF          L656
         Mines.c   223            time = 0;
    0000028C 2C92                   MOV.L       R9,@R12
    0000028E              L656:                             
         Mines.c   224        }
         Mines.c   225        itoa_two_digits(str, (time/600)%100);
    0000028E 9045                   MOV.W       L779,R0    ; H'0258
    00000290 D22C                   MOV.L       L779+40,R2 ; __divls
    00000292 420B                   JSR         @R2
    00000294 61C2                   MOV.L       @R12,R1
    00000296 6103                   MOV         R0,R1
    00000298 D32B                   MOV.L       L779+44,R3 ; __modls
    0000029A 430B                   JSR         @R3
    0000029C E064                   MOV         #100,R0
    0000029E 6503                   MOV         R0,R5
    000002A0 BEE9                   BSR         _itoa_two_digits
    000002A2 64E3                   MOV         R14,R4
         Mines.c   226        PrintMini(11, 16, str, 0);
    000002A4 D324                   MOV.L       L779+28,R3 ; _PrintMini
    000002A6 E700                   MOV         #0,R7
    000002A8 66E3                   MOV         R14,R6
    000002AA E510                   MOV         #16,R5
    000002AC 430B                   JSR         @R3
    000002AE E40B                   MOV         #11,R4
         Mines.c   227        Bdisp_SetPoint_VRAM(19, 17, 1);
    000002B0 D226                   MOV.L       L779+48,R2 ; _Bdisp_SetPoint_VRAM
    000002B2 E601                   MOV         #1,R6
    000002B4 E511                   MOV         #17,R5
    000002B6 420B                   JSR         @R2
    000002B8 E413                   MOV         #19,R4
         Mines.c   228        Bdisp_SetPoint_VRAM(19, 19, 1);
    000002BA E601                   MOV         #1,R6
    000002BC D323                   MOV.L       L779+48,R3 ; _Bdisp_SetPoint_VRAM
    000002BE E513                   MOV         #19,R5
    000002C0 430B                   JSR         @R3
    000002C2 6453                   MOV         R5,R4
         Mines.c   229        itoa_two_digits(str, (time/10)%60);
    000002C4 61C2                   MOV.L       @R12,R1
    000002C6 D21F                   MOV.L       L779+40,R2 ; __divls
    000002C8 420B                   JSR         @R2
    000002CA E00A                   MOV         #10,R0
    000002CC D31E                   MOV.L       L779+44,R3 ; __modls
    000002CE 6103                   MOV         R0,R1
    000002D0 430B                   JSR         @R3
    000002D2 E03C                   MOV         #60,R0
    000002D4 6503                   MOV         R0,R5
    000002D6 BECE                   BSR         _itoa_two_digits
    000002D8 64E3                   MOV         R14,R4
         Mines.c   230        PrintMini(21, 16, str, 0);
    000002DA E700                   MOV         #0,R7
    000002DC D316                   MOV.L       L779+28,R3 ; _PrintMini




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002DE 66E3                   MOV         R14,R6
    000002E0 E510                   MOV         #16,R5
    000002E2 430B                   JSR         @R3
    000002E4 E415                   MOV         #21,R4
         Mines.c   231        Bdisp_SetPoint_VRAM(29, 20, 1);
    000002E6 E601                   MOV         #1,R6
    000002E8 D218                   MOV.L       L779+48,R2 ; _Bdisp_SetPoint_VRAM
    000002EA E514                   MOV         #20,R5
    000002EC 420B                   JSR         @R2
    000002EE E41D                   MOV         #29,R4
         Mines.c   232        itoa(str, time%10);
    000002F0 61C2                   MOV.L       @R12,R1
    000002F2 D315                   MOV.L       L779+44,R3 ; __modls
    000002F4 430B                   JSR         @R3
    000002F6 E00A                   MOV         #10,R0
    000002F8 6503                   MOV         R0,R5
    000002FA BE81                   BSR         _itoa
    000002FC 64E3                   MOV         R14,R4
         Mines.c   233        PrintMini(31, 16, str, 0);
    000002FE E700                   MOV         #0,R7
    00000300 D30D                   MOV.L       L779+28,R3 ; _PrintMini
    00000302 66E3                   MOV         R14,R6
    00000304 E510                   MOV         #16,R5
    00000306 430B                   JSR         @R3
    00000308 E41F                   MOV         #31,R4
         Mines.c   234    
         Mines.c   235        // Draw minimap
         Mines.c   236        // Outline
         Mines.c   237        Bdisp_DrawLineVRAM(mmX-1, mmY-1, mmX+width, mmY-1);
    0000030A 67A3                   MOV         R10,R7
    0000030C 77FF                   ADD         #-1,R7
    0000030E 6573                   MOV         R7,R5
    00000310 2F72                   MOV.L       R7,@R15
    00000312 5EF2                   MOV.L       @(8,R15),R14
    00000314 3EBC                   ADD         R11,R14
    00000316 66E3                   MOV         R14,R6
    00000318 A01A                   BRA         L775
    0000031A 0009                   NOP
    0000031C              L779:                             
    0000031C 0258                   .DATA.W     H'0258
    0000031E 0000                   .DATA.W     0
    00000320 <00000000>             .DATA.L     _Bdisp_ClearLineVRAM
    00000324 <000000B4>             .DATA.L     H'000000B4+_graphs
    00000328 <00000000>             .DATA.L     __quick_odd_mvn
    0000032C <00000000>             .DATA.L     _Bdisp_WriteGraph_VRAM
    00000330 <0000009C>             .DATA.L     H'0000009C+_graphs
    00000334 <000000A8>             .DATA.L     H'000000A8+_graphs
    00000338 <00000000>             .DATA.L     _PrintMini
    0000033C <00000000>             .DATA.L     _time
    00000340 <00000000>             .DATA.L     _started
    00000344 <00000000>             .DATA.L     __divls
    00000348 <00000000>             .DATA.L     __modls
    0000034C <00000000>             .DATA.L     _Bdisp_SetPoint_VRAM
    00000350              L775:                             
    00000350 64B3                   MOV         R11,R4
    00000352 74FF                   ADD         #-1,R4
    00000354 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000356 1F41                   MOV.L       R4,@(4,R15)
         Mines.c   238        Bdisp_DrawLineVRAM(mmX+width, mmY-1, mmX+width, mmY+height);
    00000358 65F2                   MOV.L       @R15,R5
    0000035A 6C83                   MOV         R8,R12
    0000035C 3CAC                   ADD         R10,R12
    0000035E 67C3                   MOV         R12,R7
    00000360 66E3                   MOV         R14,R6
    00000362 4D0B                   JSR         @R13
    00000364 64E3                   MOV         R14,R4
         Mines.c   239        Bdisp_DrawLineVRAM(mmX+width, mmY+height, mmX-1, mmY+height);
    00000366 67C3                   MOV         R12,R7
    00000368 56F1                   MOV.L       @(4,R15),R6
    0000036A 65C3                   MOV         R12,R5
    0000036C 4D0B                   JSR         @R13
    0000036E 64E3                   MOV         R14,R4
         Mines.c   240        Bdisp_DrawLineVRAM(mmX-1, mmY+height, mmX-1, mmY-1);
    00000370 67F2                   MOV.L       @R15,R7
    00000372 65C3                   MOV         R12,R5
    00000374 56F1                   MOV.L       @(4,R15),R6
    00000376 4D0B                   JSR         @R13
    00000378 6463                   MOV         R6,R4
         Mines.c   241        // Crosshair
         Mines.c   242        Bdisp_AreaReverseVRAM(mmX+cx, mmY-1, mmX+cx, mmY-3);
    0000037A 67A3                   MOV         R10,R7
    0000037C DD60                   MOV.L       L780,R13   ; _Bdisp_AreaReverseVRAM
    0000037E E078                   MOV         #120,R0
    00000380 06FE                   MOV.L       @(R0,R15),R6
    00000382 77FD                   ADD         #-3,R7
    00000384 36BC                   ADD         R11,R6
    00000386 1F63                   MOV.L       R6,@(12,R15)
    00000388 65F2                   MOV.L       @R15,R5
    0000038A 4D0B                   JSR         @R13
    0000038C 6463                   MOV         R6,R4
         Mines.c   243        Bdisp_AreaReverseVRAM(mmX+cx, mmY+height, mmX+cx, mmY+height+2);
    0000038E 67C3                   MOV         R12,R7
    00000390 56F3                   MOV.L       @(12,R15),R6
    00000392 65C3                   MOV         R12,R5
    00000394 7702                   ADD         #2,R7
    00000396 4D0B                   JSR         @R13
    00000398 6463                   MOV         R6,R4
         Mines.c   244        Bdisp_AreaReverseVRAM(mmX-1, mmY+cy, mmX-3, mmY+cy);
    0000039A E07C                   MOV         #124,R0
    0000039C 0CFE                   MOV.L       @(R0,R15),R12
    0000039E 66B3                   MOV         R11,R6
    000003A0 3CAC                   ADD         R10,R12
    000003A2 67C3                   MOV         R12,R7
    000003A4 76FD                   ADD         #-3,R6
    000003A6 65C3                   MOV         R12,R5
    000003A8 4D0B                   JSR         @R13
    000003AA 54F1                   MOV.L       @(4,R15),R4
         Mines.c   245        Bdisp_AreaReverseVRAM(mmX+width, mmY+cy, mmX+width+2, mmY+cy);
    000003AC 67C3                   MOV         R12,R7
    000003AE 66E3                   MOV         R14,R6
    000003B0 7602                   ADD         #2,R6
    000003B2 65C3                   MOV         R12,R5
    000003B4 4D0B                   JSR         @R13
    000003B6 64E3                   MOV         R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Mines.c   246        // Contents
         Mines.c   247        for(i = 0; i<width; ++i) {
    000003B8 A023                   BRA         L657
    000003BA 6C93                   MOV         R9,R12
    000003BC              L658:                             
         Mines.c   248            for(j = 0; j<height; ++j) {
    000003BC 2F92                   MOV.L       R9,@R15
    000003BE EE00                   MOV         #0,R14
    000003C0 53F4                   MOV.L       @(16,R15),R3
    000003C2 62C3                   MOV         R12,R2
    000003C4 3EAC                   ADD         R10,R14
    000003C6 ED78                   MOV         #120,R13
    000003C8 0CD7                   MUL.L       R13,R12
    000003CA 32BC                   ADD         R11,R2
    000003CC 0D1A                   STS         MACL,R13
    000003CE 3D3C                   ADD         R3,R13
    000003D0 4815                   CMP/PL      R8
    000003D2 8F15                   BF/S        L659
    000003D4 1F21                   MOV.L       R2,@(4,R15)
    000003D6              L660:                             
         Mines.c   249                Bdisp_SetPoint_VRAM(i+mmX, j+mmY, !((revealed[i][j])||(won)));
    000003D6 63D2                   MOV.L       @R13,R3
    000003D8 2338                   TST         R3,R3
    000003DA 8B05                   BF          L662
    000003DC D249                   MOV.L       L780+4,R2  ; _won
    000003DE 6322                   MOV.L       @R2,R3
    000003E0 2338                   TST         R3,R3
    000003E2 8B01                   BF          L662
    000003E4 A001                   BRA         L663
    000003E6 E601                   MOV         #1,R6
    000003E8              L662:                             
    000003E8 E600                   MOV         #0,R6
    000003EA              L663:                             
    000003EA 65E3                   MOV         R14,R5
    000003EC D346                   MOV.L       L780+8,R3  ; _Bdisp_SetPoint_VRAM
    000003EE 430B                   JSR         @R3
    000003F0 54F1                   MOV.L       @(4,R15),R4
    000003F2 7E01                   ADD         #1,R14
    000003F4 62F2                   MOV.L       @R15,R2
    000003F6 7201                   ADD         #1,R2
    000003F8 2F22                   MOV.L       R2,@R15
    000003FA 3283                   CMP/GE      R8,R2
    000003FC 8FEB                   BF/S        L660
    000003FE 7D04                   ADD         #4,R13
    00000400              L659:                             
    00000400 7C01                   ADD         #1,R12
    00000402              L657:                             
    00000402 52F2                   MOV.L       @(8,R15),R2
    00000404 3C23                   CMP/GE      R2,R12
    00000406 8BD9                   BF          L658
         Mines.c   250            }
         Mines.c   251        }
         Mines.c   252    }
    00000408 7F50                   ADD         #80,R15
    0000040A 4F16                   LDS.L       @R15+,MACL
    0000040C 4F26                   LDS.L       @R15+,PR
    0000040E 68F6                   MOV.L       @R15+,R8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000410 69F6                   MOV.L       @R15+,R9
    00000412 6AF6                   MOV.L       @R15+,R10
    00000414 6BF6                   MOV.L       @R15+,R11
    00000416 6CF6                   MOV.L       @R15+,R12
    00000418 6DF6                   MOV.L       @R15+,R13
    0000041A 000B                   RTS
    0000041C 6EF6                   MOV.L       @R15+,R14
         Mines.c   253    
         Mines.c   254    void drawCellOutlines(int x, int y, int camX, int camY,
    0000041E              _drawCellOutlines:               ; function: drawCellOutlines
                                                           ; frame size=24
         Mines.c   255     int up, int down, int left, int right) {
         Mines.c   256    
         Mines.c   257        const sX = 79+10*(x-camX);
    0000041E 3468                   SUB         R6,R4
    00000420 2FE6                   MOV.L       R14,@-R15
         Mines.c   258        const sY = 27+10*(y-camY);
    00000422 3578                   SUB         R7,R5
    00000424 2FD6                   MOV.L       R13,@-R15
    00000426 6E43                   MOV         R4,R14
    00000428 2FC6                   MOV.L       R12,@-R15
    0000042A 6343                   MOV         R4,R3
    0000042C 2FB6                   MOV.L       R11,@-R15
    0000042E 4E08                   SHLL2       R14
    00000430 2FA6                   MOV.L       R10,@-R15
    00000432 6D53                   MOV         R5,R13
    00000434 4F22                   STS.L       PR,@-R15
    00000436 3E3C                   ADD         R3,R14
    00000438 DA34                   MOV.L       L780+12,R10; _Bdisp_DrawLineVRAM
    0000043A 4D08                   SHLL2       R13
    0000043C 52F6                   MOV.L       @(24,R15),R2
    0000043E 4E00                   SHLL        R14
    00000440 7E4F                   ADD         #79,R14
    00000442 6353                   MOV         R5,R3
    00000444 3D3C                   ADD         R3,R13
    00000446 4D00                   SHLL        R13
    00000448 7D1B                   ADD         #27,R13
    0000044A 6BE3                   MOV         R14,R11
    0000044C 2228                   TST         R2,R2
    0000044E 8D05                   BT/S        L664
    00000450 7B09                   ADD         #9,R11
         Mines.c   259    
         Mines.c   260        if(up) {
         Mines.c   261            Bdisp_DrawLineVRAM(sX, sY, sX+9, sY);
    00000452 67D3                   MOV         R13,R7
    00000454 66B3                   MOV         R11,R6
    00000456 65D3                   MOV         R13,R5
    00000458 4A0B                   JSR         @R10
    0000045A 64E3                   MOV         R14,R4
    0000045C              L664:                             
    0000045C 53F7                   MOV.L       @(28,R15),R3
    0000045E 6CD3                   MOV         R13,R12
    00000460 2338                   TST         R3,R3
    00000462 8D05                   BT/S        L665
    00000464 7C09                   ADD         #9,R12
         Mines.c   262        }
         Mines.c   263        if(down) {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Mines.c   264            Bdisp_DrawLineVRAM(sX, sY+9, sX+9, sY+9);
    00000466 67C3                   MOV         R12,R7
    00000468 66B3                   MOV         R11,R6
    0000046A 65C3                   MOV         R12,R5
    0000046C 4A0B                   JSR         @R10
    0000046E 64E3                   MOV         R14,R4
    00000470              L665:                             
         Mines.c   265        }
         Mines.c   266        if(left) {
    00000470 53F8                   MOV.L       @(32,R15),R3
    00000472 2338                   TST         R3,R3
    00000474 8904                   BT          L666
         Mines.c   267            Bdisp_DrawLineVRAM(sX, sY, sX, sY+9);
    00000476 67C3                   MOV         R12,R7
    00000478 66E3                   MOV         R14,R6
    0000047A 65D3                   MOV         R13,R5
    0000047C 4A0B                   JSR         @R10
    0000047E 64E3                   MOV         R14,R4
    00000480              L666:                             
         Mines.c   268        }
         Mines.c   269        if(right) {
    00000480 53F9                   MOV.L       @(36,R15),R3
    00000482 2338                   TST         R3,R3
    00000484 8904                   BT          L667
         Mines.c   270            Bdisp_DrawLineVRAM(sX+9, sY, sX+9, sY+9);
    00000486 67C3                   MOV         R12,R7
    00000488 66B3                   MOV         R11,R6
    0000048A 65D3                   MOV         R13,R5
    0000048C 4A0B                   JSR         @R10
    0000048E 64B3                   MOV         R11,R4
    00000490              L667:                             
         Mines.c   271        }
         Mines.c   272        
         Mines.c   273    }
    00000490 4F26                   LDS.L       @R15+,PR
    00000492 6AF6                   MOV.L       @R15+,R10
    00000494 6BF6                   MOV.L       @R15+,R11
    00000496 6CF6                   MOV.L       @R15+,R12
    00000498 6DF6                   MOV.L       @R15+,R13
    0000049A 000B                   RTS
    0000049C 6EF6                   MOV.L       @R15+,R14
         Mines.c   274    
         Mines.c   275    // state: 0 = hidden, 1 = revealed, 2 = flagged
         Mines.c   276    void drawCell(int x, int y, int camX, int camY, int num, int state, int dead) {
    0000049E              _drawCell:                       ; function: drawCell
                                                           ; frame size=52
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
         Mines.c   277        const sX = 79+10*(x-camX);
    0000049E 3468                   SUB         R6,R4
    000004A0 2FE6                   MOV.L       R14,@-R15
         Mines.c   278        const sY = 27+10*(y-camY);
    000004A2 3578                   SUB         R7,R5
    000004A4 2FD6                   MOV.L       R13,@-R15
    000004A6 6343                   MOV         R4,R3
    000004A8 4F22                   STS.L       PR,@-R15
    000004AA 6653                   MOV         R5,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004AC 7FD8                   ADD         #-40,R15
    000004AE 4408                   SHLL2       R4
    000004B0 5DFD                   MOV.L       @(52,R15),R13
    000004B2 4608                   SHLL2       R6
    000004B4 5EFF                   MOV.L       @(60,R15),R14
    000004B6 343C                   ADD         R3,R4
    000004B8 4400                   SHLL        R4
    000004BA 744F                   ADD         #79,R4
    000004BC 6353                   MOV         R5,R3
    000004BE 363C                   ADD         R3,R6
    000004C0 4600                   SHLL        R6
    000004C2 761B                   ADD         #27,R6
         Mines.c   279        DISPBOX box;
         Mines.c   280        DISPGRAPH graph;
         Mines.c   281        box.left = sX;
    000004C4 65F3                   MOV         R15,R5
    000004C6 7518                   ADD         #24,R5
    000004C8 2542                   MOV.L       R4,@R5
         Mines.c   282        box.top = sY;
         Mines.c   283        box.right = sX + 9;
    000004CA 6243                   MOV         R4,R2
    000004CC 1561                   MOV.L       R6,@(4,R5)
         Mines.c   284        box.bottom = sY + 9;
    000004CE 6363                   MOV         R6,R3
    000004D0 7209                   ADD         #9,R2
    000004D2 7309                   ADD         #9,R3
    000004D4 1522                   MOV.L       R2,@(8,R5)
    000004D6 1533                   MOV.L       R3,@(12,R5)
         Mines.c   285        graph.x = sX;
    000004D8 2F42                   MOV.L       R4,@R15
         Mines.c   286        graph.y = sY;
    000004DA 1F61                   MOV.L       R6,@(4,R15)
    000004DC D50C                   MOV.L       L780+16,R5 ; _graphs
         Mines.c   287        graph.WriteModify = IMB_WRITEMODIFY_NORMAL;
    000004DE E401                   MOV         #1,R4
    000004E0 E014                   MOV         #20,R0
    000004E2 0F44                   MOV.B       R4,@(R0,R15)
         Mines.c   288        graph.WriteKind = IMB_WRITEKIND_OVER;
    000004E4 E015                   MOV         #21,R0
    000004E6 0F44                   MOV.B       R4,@(R0,R15)
    000004E8 50FE                   MOV.L       @(56,R15),R0
    000004EA 8800                   CMP/EQ      #0,R0
    000004EC 8D12                   BT/S        L594
    000004EE 6453                   MOV         R5,R4
    000004F0 8801                   CMP/EQ      #1,R0
    000004F2 894F                   BT          L595
    000004F4 8802                   CMP/EQ      #2,R0
    000004F6 8B01                   BF          L781
    000004F8 A0C2                   BRA         L606
    000004FA 0009                   NOP
    000004FC              L781:                             
    000004FC A0D2                   BRA         L668
    000004FE 0009                   NOP
    00000500              L780:                             
    00000500 <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM
    00000504 <00000000>             .DATA.L     _won
    00000508 <00000000>             .DATA.L     _Bdisp_SetPoint_VRAM




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000050C <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    00000510 <00000000>             .DATA.L     _graphs
    00000514              L594:                            ; case label 
         Mines.c   289    
         Mines.c   290        switch(state) {
         Mines.c   291            case 0:  // Hidden tile, draw checker pattern
         Mines.c   292                if((!dead) || (dead && num != -1)) {
    00000514 2EE8                   TST         R14,R14
    00000516 8906                   BT          L670
    00000518 2EE8                   TST         R14,R14
    0000051A 8B01                   BF          L782
    0000051C A0C2                   BRA         L668
    0000051E 0009                   NOP
    00000520              L782:                             
    00000520 60D3                   MOV         R13,R0
    00000522 88FF                   CMP/EQ      #-1,R0
    00000524 8908                   BT          L669
    00000526              L670:                             
         Mines.c   293                    graph.GraphData = graphs[12];
    00000526 61F3                   MOV         R15,R1
    00000528 925C                   MOV.W       L783,R2    ; H'0090
    0000052A 7108                   ADD         #8,R1
    0000052C D32E                   MOV.L       L783+4,R3  ; __quick_odd_mvn
    0000052E 324C                   ADD         R4,R2
    00000530 430B                   JSR         @R3
    00000532 E00C                   MOV         #12,R0
    00000534 A0B6                   BRA         L668
    00000536 0009                   NOP
    00000538              L669:                             
         Mines.c   294                }
         Mines.c   295                else if(dead && num == -1 && !won) {  // Show mine on unrevealed
    00000538 2EE8                   TST         R14,R14
    0000053A 8B01                   BF          L784
    0000053C A0B2                   BRA         L668
    0000053E 0009                   NOP
    00000540              L784:                             
    00000540 60D3                   MOV         R13,R0
    00000542 88FF                   CMP/EQ      #-1,R0
    00000544 8901                   BT          L785
    00000546 A0AD                   BRA         L668
    00000548 0009                   NOP
    0000054A              L785:                             
    0000054A D328                   MOV.L       L783+8,R3  ; _won
    0000054C 6232                   MOV.L       @R3,R2
    0000054E 2228                   TST         R2,R2
    00000550 8B08                   BF          L672
         Mines.c   296                    graph.GraphData = graphs[9];
    00000552 61F3                   MOV         R15,R1
    00000554 D324                   MOV.L       L783+4,R3  ; __quick_odd_mvn
    00000556 6243                   MOV         R4,R2
    00000558 7108                   ADD         #8,R1
    0000055A 726C                   ADD         #108,R2
    0000055C 430B                   JSR         @R3
    0000055E E00C                   MOV         #12,R0
    00000560 A0A0                   BRA         L668
    00000562 0009                   NOP
    00000564              L672:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Mines.c   297                }
         Mines.c   298                else if(dead && num == -1 && won) {  // Auto place flags
    00000564 2EE8                   TST         R14,R14
    00000566 8B01                   BF          L786
    00000568 A09C                   BRA         L668
    0000056A 0009                   NOP
    0000056C              L786:                             
    0000056C 60D3                   MOV         R13,R0
    0000056E 88FF                   CMP/EQ      #-1,R0
    00000570 8901                   BT          L787
    00000572 A097                   BRA         L668
    00000574 0009                   NOP
    00000576              L787:                             
    00000576 D31D                   MOV.L       L783+8,R3  ; _won
    00000578 6232                   MOV.L       @R3,R2
    0000057A 2228                   TST         R2,R2
    0000057C 8B01                   BF          L788
    0000057E A091                   BRA         L668
    00000580 0009                   NOP
    00000582              L788:                             
         Mines.c   299                    graph.GraphData = graphs[10];
    00000582 61F3                   MOV         R15,R1
    00000584 D318                   MOV.L       L783+4,R3  ; __quick_odd_mvn
    00000586 6243                   MOV         R4,R2
    00000588 7108                   ADD         #8,R1
    0000058A 7278                   ADD         #120,R2
    0000058C 430B                   JSR         @R3
    0000058E E00C                   MOV         #12,R0
         Mines.c   300                }
         Mines.c   301                break;
    00000590 A088                   BRA         L668
    00000592 0009                   NOP
    00000594              L595:                            ; case label 
         Mines.c   302            case 1:  // Revealed tile, draw numbers
         Mines.c   303                switch(num) {
    00000594 60D3                   MOV         R13,R0
    00000596 8800                   CMP/EQ      #0,R0
    00000598 8913                   BT          L596
    0000059A 8801                   CMP/EQ      #1,R0
    0000059C 8919                   BT          L597
    0000059E 8802                   CMP/EQ      #2,R0
    000005A0 8926                   BT          L598
    000005A2 8803                   CMP/EQ      #3,R0
    000005A4 892D                   BT          L599
    000005A6 8804                   CMP/EQ      #4,R0
    000005A8 8934                   BT          L600
    000005AA 8805                   CMP/EQ      #5,R0
    000005AC 893B                   BT          L601
    000005AE 8806                   CMP/EQ      #6,R0
    000005B0 8942                   BT          L602
    000005B2 8807                   CMP/EQ      #7,R0
    000005B4 8949                   BT          L603
    000005B6 8808                   CMP/EQ      #8,R0
    000005B8 8950                   BT          L604
    000005BA 88FF                   CMP/EQ      #-1,R0
    000005BC 8957                   BT          L605
    000005BE A071                   BRA         L668




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005C0 0009                   NOP
    000005C2              L596:                            ; case label 
         Mines.c   304                    case 0:
         Mines.c   305                        graph.GraphData = graphs[0];
    000005C2 61F3                   MOV         R15,R1
    000005C4 D308                   MOV.L       L783+4,R3  ; __quick_odd_mvn
    000005C6 6243                   MOV         R4,R2
    000005C8 7108                   ADD         #8,R1
    000005CA 430B                   JSR         @R3
    000005CC E00C                   MOV         #12,R0
         Mines.c   306                        break;
    000005CE A069                   BRA         L668
    000005D0 0009                   NOP
    000005D2              L597:                            ; case label 
         Mines.c   307                    case 1:
         Mines.c   308                        graph.GraphData = graphs[1];
    000005D2 61F3                   MOV         R15,R1
    000005D4 D304                   MOV.L       L783+4,R3  ; __quick_odd_mvn
    000005D6 6243                   MOV         R4,R2
    000005D8 7108                   ADD         #8,R1
    000005DA 720C                   ADD         #12,R2
    000005DC 430B                   JSR         @R3
    000005DE E00C                   MOV         #12,R0
         Mines.c   309                        break;
    000005E0 A060                   BRA         L668
    000005E2 0009                   NOP
    000005E4              L783:                             
    000005E4 0090                   .DATA.W     H'0090
    000005E6 0000                   .DATA.W     0
    000005E8 <00000000>             .DATA.L     __quick_odd_mvn
    000005EC <00000000>             .DATA.L     _won
    000005F0              L598:                            ; case label 
         Mines.c   310                    case 2:
         Mines.c   311                        graph.GraphData = graphs[2];
    000005F0 D376                   MOV.L       L789,R3    ; __quick_odd_mvn
    000005F2 61F3                   MOV         R15,R1
    000005F4 7108                   ADD         #8,R1
    000005F6 6243                   MOV         R4,R2
    000005F8 7218                   ADD         #24,R2
    000005FA 430B                   JSR         @R3
    000005FC E00C                   MOV         #12,R0
         Mines.c   312                        break;
    000005FE A051                   BRA         L668
    00000600 0009                   NOP
    00000602              L599:                            ; case label 
         Mines.c   313                    case 3:
         Mines.c   314                        graph.GraphData = graphs[3];
    00000602 61F3                   MOV         R15,R1
    00000604 D371                   MOV.L       L789,R3    ; __quick_odd_mvn
    00000606 6243                   MOV         R4,R2
    00000608 7108                   ADD         #8,R1
    0000060A 7224                   ADD         #36,R2
    0000060C 430B                   JSR         @R3
    0000060E E00C                   MOV         #12,R0
         Mines.c   315                        break;
    00000610 A048                   BRA         L668
    00000612 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000614              L600:                            ; case label 
         Mines.c   316                    case 4:
         Mines.c   317                        graph.GraphData = graphs[4];
    00000614 D36D                   MOV.L       L789,R3    ; __quick_odd_mvn
    00000616 61F3                   MOV         R15,R1
    00000618 7108                   ADD         #8,R1
    0000061A 6243                   MOV         R4,R2
    0000061C 7230                   ADD         #48,R2
    0000061E 430B                   JSR         @R3
    00000620 E00C                   MOV         #12,R0
         Mines.c   318                        break;
    00000622 A03F                   BRA         L668
    00000624 0009                   NOP
    00000626              L601:                            ; case label 
         Mines.c   319                    case 5:
         Mines.c   320                        graph.GraphData = graphs[5];
    00000626 61F3                   MOV         R15,R1
    00000628 D368                   MOV.L       L789,R3    ; __quick_odd_mvn
    0000062A 6243                   MOV         R4,R2
    0000062C 7108                   ADD         #8,R1
    0000062E 723C                   ADD         #60,R2
    00000630 430B                   JSR         @R3
    00000632 E00C                   MOV         #12,R0
         Mines.c   321                        break;
    00000634 A036                   BRA         L668
    00000636 0009                   NOP
    00000638              L602:                            ; case label 
         Mines.c   322                    case 6:
         Mines.c   323                        graph.GraphData = graphs[6];
    00000638 D364                   MOV.L       L789,R3    ; __quick_odd_mvn
    0000063A 61F3                   MOV         R15,R1
    0000063C 7108                   ADD         #8,R1
    0000063E 6243                   MOV         R4,R2
    00000640 7248                   ADD         #72,R2
    00000642 430B                   JSR         @R3
    00000644 E00C                   MOV         #12,R0
         Mines.c   324                        break;
    00000646 A02D                   BRA         L668
    00000648 0009                   NOP
    0000064A              L603:                            ; case label 
         Mines.c   325                    case 7:
         Mines.c   326                        graph.GraphData = graphs[7];
    0000064A 61F3                   MOV         R15,R1
    0000064C D35F                   MOV.L       L789,R3    ; __quick_odd_mvn
    0000064E 6243                   MOV         R4,R2
    00000650 7108                   ADD         #8,R1
    00000652 7254                   ADD         #84,R2
    00000654 430B                   JSR         @R3
    00000656 E00C                   MOV         #12,R0
         Mines.c   327                        break;
    00000658 A024                   BRA         L668
    0000065A 0009                   NOP
    0000065C              L604:                            ; case label 
         Mines.c   328                    case 8:
         Mines.c   329                        graph.GraphData = graphs[8];
    0000065C D35B                   MOV.L       L789,R3    ; __quick_odd_mvn
    0000065E 61F3                   MOV         R15,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000660 7108                   ADD         #8,R1
    00000662 6243                   MOV         R4,R2
    00000664 7260                   ADD         #96,R2
    00000666 430B                   JSR         @R3
    00000668 E00C                   MOV         #12,R0
         Mines.c   330                        break;
    0000066A A01B                   BRA         L668
    0000066C 0009                   NOP
    0000066E              L605:                            ; case label 
         Mines.c   331                    case -1:
         Mines.c   332                        graph.GraphData = graphs[9];
    0000066E 61F3                   MOV         R15,R1
    00000670 D356                   MOV.L       L789,R3    ; __quick_odd_mvn
    00000672 6243                   MOV         R4,R2
    00000674 7108                   ADD         #8,R1
    00000676 726C                   ADD         #108,R2
    00000678 430B                   JSR         @R3
    0000067A E00C                   MOV         #12,R0
         Mines.c   333                        break;
         Mines.c   334                }
         Mines.c   335                break;
    0000067C A012                   BRA         L668
    0000067E 0009                   NOP
    00000680              L606:                            ; case label 
         Mines.c   336            case 2:  // Flagged tile, draw flag
         Mines.c   337                graph.GraphData = graphs[ (dead && num != -1)? 11 : 10 ];
    00000680 2EE8                   TST         R14,R14
    00000682 8904                   BT          L676
    00000684 60D3                   MOV         R13,R0
    00000686 88FF                   CMP/EQ      #-1,R0
    00000688 8901                   BT          L676
    0000068A A001                   BRA         L677
    0000068C E20B                   MOV         #11,R2
    0000068E              L676:                             
    0000068E E20A                   MOV         #10,R2
    00000690              L677:                             
    00000690 6323                   MOV         R2,R3
    00000692 4200                   SHLL        R2
    00000694 323C                   ADD         R3,R2
    00000696 4208                   SHLL2       R2
    00000698 D34C                   MOV.L       L789,R3    ; __quick_odd_mvn
    0000069A 61F3                   MOV         R15,R1
    0000069C 325C                   ADD         R5,R2
    0000069E 7108                   ADD         #8,R1
    000006A0 430B                   JSR         @R3
    000006A2 E00C                   MOV         #12,R0
         Mines.c   338                break;
    000006A4              L668:                             
         Mines.c   339        }
         Mines.c   340        Bdisp_WriteGraph_VRAM(&graph);
    000006A4 D34A                   MOV.L       L789+4,R3  ; _Bdisp_WriteGraph_VRAM
    000006A6 430B                   JSR         @R3
    000006A8 64F3                   MOV         R15,R4
         Mines.c   341        //Bdisp_PutDisp_DD();
         Mines.c   342        //Sleep(100);
         Mines.c   343    }
    000006AA 7F28                   ADD         #40,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006AC 4F26                   LDS.L       @R15+,PR
    000006AE 6DF6                   MOV.L       @R15+,R13
    000006B0 000B                   RTS
    000006B2 6EF6                   MOV.L       @R15+,R14
         Mines.c   344    
         Mines.c   345    int outOfBounds(int x, int y, int width, int height) {
    000006B4              _outOfBounds:                    ; function: outOfBounds
                                                           ; frame size=0
         Mines.c   346        return x < 0 || x >= width || y < 0 || y >= height;
    000006B4 4411                   CMP/PZ      R4
    000006B6 8B07                   BF          L678
    000006B8 3463                   CMP/GE      R6,R4
    000006BA 8905                   BT          L678
    000006BC 4511                   CMP/PZ      R5
    000006BE 8B03                   BF          L678
    000006C0 3573                   CMP/GE      R7,R5
    000006C2 8901                   BT          L678
    000006C4 000B                   RTS
    000006C6 E000                   MOV         #0,R0
    000006C8              L678:                             
    000006C8 E001                   MOV         #1,R0
         Mines.c   347    }
    000006CA              L680:                             
    000006CA 000B                   RTS
    000006CC 0009                   NOP
         Mines.c   348    
         Mines.c   349    int abs(int x) {
    000006CE              _abs:                            ; function: abs
                                                           ; frame size=0
         Mines.c   350        return x < 0 ? -x : x;
    000006CE 4411                   CMP/PZ      R4
    000006D0 8901                   BT          L681
    000006D2 000B                   RTS
    000006D4 604B                   NEG         R4,R0
    000006D6              L681:                             
    000006D6 6043                   MOV         R4,R0
         Mines.c   351    }
    000006D8              L683:                             
    000006D8 000B                   RTS
    000006DA 0009                   NOP
         Mines.c   352    void updateBoard(int board[30][30], int revealed[30][30], int camX, int camY,
    000006DC              _updateBoard:                    ; function: updateBoard
                                                           ; frame size=80
    000006DC 2FE6                   MOV.L       R14,@-R15
    000006DE 2FD6                   MOV.L       R13,@-R15
    000006E0 2FC6                   MOV.L       R12,@-R15
    000006E2 2FB6                   MOV.L       R11,@-R15
    000006E4 2FA6                   MOV.L       R10,@-R15
    000006E6 2F96                   MOV.L       R9,@-R15
    000006E8 2F86                   MOV.L       R8,@-R15
    000006EA 6963                   MOV         R6,R9
         Mines.c   353        int width, int height, int cursorX, int cursorY, int dead, int minesLeft) {
         Mines.c   354        int i; int j;
         Mines.c   355        Bdisp_AllClr_VRAM();
    000006EC D339                   MOV.L       L789+8,R3  ; _Bdisp_AllClr_VRAM
    000006EE 4F22                   STS.L       PR,@-R15
    000006F0 4F12                   STS.L       MACL,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006F2 7FE4                   ADD         #-28,R15
    000006F4 1F45                   MOV.L       R4,@(20,R15)
    000006F6 1F54                   MOV.L       R5,@(16,R15)
    000006F8 430B                   JSR         @R3
    000006FA 6B73                   MOV         R7,R11
         Mines.c   356        for(i = -4; i<5; ++i) {
    000006FC EA01                   MOV         #1,R10
    000006FE ED00                   MOV         #0,R13
    00000700 E2FC                   MOV         #-4,R2
    00000702 1F22                   MOV.L       R2,@(8,R15)
    00000704              L684:                             
         Mines.c   357            for(j = -3; j<4; ++j) {
    00000704 E3FD                   MOV         #-3,R3
    00000706 64B3                   MOV         R11,R4
    00000708 2F32                   MOV.L       R3,@R15
    0000070A 74FD                   ADD         #-3,R4
    0000070C 1F41                   MOV.L       R4,@(4,R15)
    0000070E 6843                   MOV         R4,R8
    00000710 1F43                   MOV.L       R4,@(12,R15)
    00000712 5EF2                   MOV.L       @(8,R15),R14
    00000714 3E9C                   ADD         R9,R14
    00000716              L685:                             
    00000716 E044                   MOV         #68,R0
    00000718 6CF2                   MOV.L       @R15,R12
    0000071A 3CBC                   ADD         R11,R12
    0000071C 07FE                   MOV.L       @(R0,R15),R7
    0000071E 65C3                   MOV         R12,R5
    00000720 E040                   MOV         #64,R0
    00000722 06FE                   MOV.L       @(R0,R15),R6
    00000724 BFC6                   BSR         _outOfBounds
    00000726 64E3                   MOV         R14,R4
    00000728 2008                   TST         R0,R0
    0000072A 8955                   BT          L686
         Mines.c   358                if(outOfBounds(camX+i, camY+j, width, height)) {
         Mines.c   359                    if(camX+i == -1 && 0 <= camY+j && camY+j < height)
    0000072C 60E3                   MOV         R14,R0
    0000072E 88FF                   CMP/EQ      #-1,R0
    00000730 8B0F                   BF          L687
    00000732 4C11                   CMP/PZ      R12
    00000734 8B0D                   BF          L687
    00000736 E044                   MOV         #68,R0
    00000738 03FE                   MOV.L       @(R0,R15),R3
    0000073A 3C33                   CMP/GE      R3,R12
    0000073C 8909                   BT          L687
         Mines.c   360                        drawCellOutlines(camX+i, camY+j, camX, camY, 0, 0, 0, 1);
    0000073E 67B3                   MOV         R11,R7
    00000740 2FA6                   MOV.L       R10,@-R15
    00000742 6693                   MOV         R9,R6
    00000744 2FD6                   MOV.L       R13,@-R15
    00000746 65C3                   MOV         R12,R5
    00000748 2FD6                   MOV.L       R13,@-R15
    0000074A 2FD6                   MOV.L       R13,@-R15
    0000074C BE67                   BSR         _drawCellOutlines
    0000074E 64E3                   MOV         R14,R4
    00000750 7F10                   ADD         #16,R15
    00000752              L687:                             
         Mines.c   361                    if(camX+i == width && 0 <= camY+j && camY+j < height)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000752 E040                   MOV         #64,R0
    00000754 02FE                   MOV.L       @(R0,R15),R2
    00000756 3E20                   CMP/EQ      R2,R14
    00000758 8B0F                   BF          L688
    0000075A 4C11                   CMP/PZ      R12
    0000075C 8B0D                   BF          L688
    0000075E E044                   MOV         #68,R0
    00000760 03FE                   MOV.L       @(R0,R15),R3
    00000762 3C33                   CMP/GE      R3,R12
    00000764 8909                   BT          L688
         Mines.c   362                        drawCellOutlines(camX+i, camY+j, camX, camY, 0, 0, 1, 0);
    00000766 67B3                   MOV         R11,R7
    00000768 2FD6                   MOV.L       R13,@-R15
    0000076A 6693                   MOV         R9,R6
    0000076C 2FA6                   MOV.L       R10,@-R15
    0000076E 65C3                   MOV         R12,R5
    00000770 2FD6                   MOV.L       R13,@-R15
    00000772 2FD6                   MOV.L       R13,@-R15
    00000774 BE53                   BSR         _drawCellOutlines
    00000776 64E3                   MOV         R14,R4
    00000778 7F10                   ADD         #16,R15
    0000077A              L688:                             
         Mines.c   363                    if(camY+j == -1 && 0 <= camX+i && camX+i < width)
    0000077A 60C3                   MOV         R12,R0
    0000077C 88FF                   CMP/EQ      #-1,R0
    0000077E 8B0F                   BF          L689
    00000780 4E11                   CMP/PZ      R14
    00000782 8B0D                   BF          L689
    00000784 E040                   MOV         #64,R0
    00000786 02FE                   MOV.L       @(R0,R15),R2
    00000788 3E23                   CMP/GE      R2,R14
    0000078A 8909                   BT          L689
         Mines.c   364                        drawCellOutlines(camX+i, camY+j, camX, camY, 0, 1, 0, 0);
    0000078C 2FD6                   MOV.L       R13,@-R15
    0000078E 67B3                   MOV         R11,R7
    00000790 2FD6                   MOV.L       R13,@-R15
    00000792 6693                   MOV         R9,R6
    00000794 2FA6                   MOV.L       R10,@-R15
    00000796 65C3                   MOV         R12,R5
    00000798 2FD6                   MOV.L       R13,@-R15
    0000079A BE40                   BSR         _drawCellOutlines
    0000079C 64E3                   MOV         R14,R4
    0000079E 7F10                   ADD         #16,R15
    000007A0              L689:                             
         Mines.c   365                    if(camY+j == height && 0 <= camX+i && camX+i < width)
    000007A0 52F3                   MOV.L       @(12,R15),R2
    000007A2 E044                   MOV         #68,R0
    000007A4 03FE                   MOV.L       @(R0,R15),R3
    000007A6 3230                   CMP/EQ      R3,R2
    000007A8 8B2E                   BF          L691
    000007AA 4E11                   CMP/PZ      R14
    000007AC 8B2C                   BF          L691
    000007AE E040                   MOV         #64,R0
    000007B0 01FE                   MOV.L       @(R0,R15),R1
    000007B2 3E13                   CMP/GE      R1,R14
    000007B4 8928                   BT          L691
         Mines.c   366                        drawCellOutlines(camX+i, camY+j, camX, camY, 1, 0, 0, 0);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007B6 67B3                   MOV         R11,R7
    000007B8 2FD6                   MOV.L       R13,@-R15
    000007BA 6693                   MOV         R9,R6
    000007BC 2FD6                   MOV.L       R13,@-R15
    000007BE 2FD6                   MOV.L       R13,@-R15
    000007C0 2FA6                   MOV.L       R10,@-R15
    000007C2 55F5                   MOV.L       @(20,R15),R5
    000007C4 BE2B                   BSR         _drawCellOutlines
    000007C6 64E3                   MOV         R14,R4
    000007C8 A01E                   BRA         L691
    000007CA 7F10                   ADD         #16,R15
    000007CC              L789:                             
    000007CC <00000000>             .DATA.L     __quick_odd_mvn
    000007D0 <00000000>             .DATA.L     _Bdisp_WriteGraph_VRAM
    000007D4 <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    000007D8              L686:                             
         Mines.c   367                }
         Mines.c   368                else {
         Mines.c   369                    drawCell(camX+i, camY+j, camX, camY,
         Mines.c   370                     board[camX+i][camY+j], revealed[camX+i][camY+j], dead);
    000007D8 E050                   MOV         #80,R0
    000007DA 6C83                   MOV         R8,R12
    000007DC 03FE                   MOV.L       @(R0,R15),R3
    000007DE 67B3                   MOV         R11,R7
    000007E0 2F36                   MOV.L       R3,@-R15
    000007E2 E078                   MOV         #120,R0
    000007E4 0E07                   MUL.L       R0,R14
    000007E6 4C08                   SHLL2       R12
    000007E8 001A                   STS         MACL,R0
    000007EA 6693                   MOV         R9,R6
    000007EC 1F07                   MOV.L       R0,@(28,R15)
    000007EE 6583                   MOV         R8,R5
    000007F0 53F5                   MOV.L       @(20,R15),R3
    000007F2 303C                   ADD         R3,R0
    000007F4 01CE                   MOV.L       @(R0,R12),R1
    000007F6 2F16                   MOV.L       R1,@-R15
    000007F8 52F7                   MOV.L       @(28,R15),R2
    000007FA 50F8                   MOV.L       @(32,R15),R0
    000007FC 302C                   ADD         R2,R0
    000007FE 01CE                   MOV.L       @(R0,R12),R1
    00000800 2F16                   MOV.L       R1,@-R15
    00000802 BE4C                   BSR         _drawCell
    00000804 64E3                   MOV         R14,R4
    00000806 7F0C                   ADD         #12,R15
    00000808              L691:                             
    00000808 63F2                   MOV.L       @R15,R3
    0000080A 7301                   ADD         #1,R3
    0000080C 2F32                   MOV.L       R3,@R15
    0000080E E304                   MOV         #4,R3
    00000810 52F1                   MOV.L       @(4,R15),R2
    00000812 7201                   ADD         #1,R2
    00000814 1F21                   MOV.L       R2,@(4,R15)
    00000816 51F3                   MOV.L       @(12,R15),R1
    00000818 7101                   ADD         #1,R1
    0000081A 1F13                   MOV.L       R1,@(12,R15)
    0000081C 60F2                   MOV.L       @R15,R0
    0000081E 3033                   CMP/GE      R3,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000820 8D02                   BT/S        L790
    00000822 7801                   ADD         #1,R8
    00000824 AF77                   BRA         L685
    00000826 0009                   NOP
    00000828              L790:                             
    00000828 51F2                   MOV.L       @(8,R15),R1
    0000082A E305                   MOV         #5,R3
    0000082C 7101                   ADD         #1,R1
    0000082E 3133                   CMP/GE      R3,R1
    00000830 8D02                   BT/S        L791
    00000832 1F12                   MOV.L       R1,@(8,R15)
    00000834 AF66                   BRA         L684
    00000836 0009                   NOP
    00000838              L791:                             
         Mines.c   371                }
         Mines.c   372            }
         Mines.c   373        }
         Mines.c   374        drawUI(board, revealed, minesLeft, width, height, cursorX, cursorY);
    00000838 E04C                   MOV         #76,R0
    0000083A 01FE                   MOV.L       @(R0,R15),R1
    0000083C 2F16                   MOV.L       R1,@-R15
    0000083E E04C                   MOV         #76,R0
    00000840 03FE                   MOV.L       @(R0,R15),R3
    00000842 E04C                   MOV         #76,R0
    00000844 2F36                   MOV.L       R3,@-R15
    00000846 02FE                   MOV.L       @(R0,R15),R2
    00000848 2F26                   MOV.L       R2,@-R15
    0000084A E04C                   MOV         #76,R0
    0000084C 55F7                   MOV.L       @(28,R15),R5
    0000084E 07FE                   MOV.L       @(R0,R15),R7
    00000850 E060                   MOV         #96,R0
    00000852 06FE                   MOV.L       @(R0,R15),R6
    00000854 BC4F                   BSR         _drawUI
    00000856 54F8                   MOV.L       @(32,R15),R4
         Mines.c   375        Bdisp_AreaReverseVRAM(79+10*(cursorX-camX), 27+10*(cursorY-camY),
         Mines.c   376        79+10*(cursorX-camX)+9, 27+10*(cursorY-camY)+9);
    00000858 E058                   MOV         #88,R0
    0000085A 07FE                   MOV.L       @(R0,R15),R7
    0000085C 37B8                   SUB         R11,R7
    0000085E 6373                   MOV         R7,R3
    00000860 4708                   SHLL2       R7
    00000862 373C                   ADD         R3,R7
    00000864 4700                   SHLL        R7
    00000866 E054                   MOV         #84,R0
    00000868 1F74                   MOV.L       R7,@(16,R15)
    0000086A 7724                   ADD         #36,R7
    0000086C 06FE                   MOV.L       @(R0,R15),R6
    0000086E 3698                   SUB         R9,R6
    00000870 6363                   MOV         R6,R3
    00000872 4608                   SHLL2       R6
    00000874 363C                   ADD         R3,R6
    00000876 4600                   SHLL        R6
    00000878 D371                   MOV.L       L792,R3    ; _Bdisp_AreaReverseVRAM
    0000087A 1F63                   MOV.L       R6,@(12,R15)
    0000087C 55F4                   MOV.L       @(16,R15),R5
    0000087E 7658                   ADD         #88,R6
    00000880 54F3                   MOV.L       @(12,R15),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000882 751B                   ADD         #27,R5
    00000884 744F                   ADD         #79,R4
    00000886 7F28                   ADD         #40,R15
    00000888 4F16                   LDS.L       @R15+,MACL
    0000088A 4F26                   LDS.L       @R15+,PR
    0000088C 68F6                   MOV.L       @R15+,R8
    0000088E 69F6                   MOV.L       @R15+,R9
    00000890 6AF6                   MOV.L       @R15+,R10
    00000892 6BF6                   MOV.L       @R15+,R11
    00000894 6CF6                   MOV.L       @R15+,R12
    00000896 6DF6                   MOV.L       @R15+,R13
    00000898 432B                   JMP         @R3
    0000089A 6EF6                   MOV.L       @R15+,R14
         Mines.c   377    }
         Mines.c   378    
         Mines.c   379    // Return value: 1 if dead, 0 if not
         Mines.c   380    int click(int cx, int cy, int board[30][30], int revealed[30][30],
    0000089C              _click:                          ; function: click
                                                           ; frame size=96
                                                           ; used runtime library name:
                                                           ; __modls
    0000089C 2FE6                   MOV.L       R14,@-R15
    0000089E E04C                   MOV         #76,R0
    000008A0 2FD6                   MOV.L       R13,@-R15
    000008A2 2FC6                   MOV.L       R12,@-R15
    000008A4 2FB6                   MOV.L       R11,@-R15
    000008A6 2FA6                   MOV.L       R10,@-R15
    000008A8 2F96                   MOV.L       R9,@-R15
    000008AA 6A63                   MOV         R6,R10
    000008AC 2F86                   MOV.L       R8,@-R15
    000008AE 4F22                   STS.L       PR,@-R15
    000008B0 4F12                   STS.L       MACL,@-R15
    000008B2 7FD8                   ADD         #-40,R15
    000008B4 1F48                   MOV.L       R4,@(32,R15)
    000008B6 1F57                   MOV.L       R5,@(28,R15)
    000008B8 1F76                   MOV.L       R7,@(24,R15)
    000008BA 09FE                   MOV.L       @(R0,R15),R9
         Mines.c   381     int width, int height, int mines, int started, int* pFlags) {
         Mines.c   382        int i; int j; int k; int l;
         Mines.c   383        if(outOfBounds(cx, cy, width, height)) {
    000008BC 55F7                   MOV.L       @(28,R15),R5
    000008BE E050                   MOV         #80,R0
    000008C0 0BFE                   MOV.L       @(R0,R15),R11
    000008C2 6693                   MOV         R9,R6
    000008C4 67B3                   MOV         R11,R7
    000008C6 BEF5                   BSR         _outOfBounds
    000008C8 54F8                   MOV.L       @(32,R15),R4
    000008CA 2008                   TST         R0,R0
    000008CC 8901                   BT          L793
    000008CE A090                   BRA         L569
    000008D0 0009                   NOP
    000008D2              L793:                             
         Mines.c   384            return 0;
         Mines.c   385        }
         Mines.c   386        if(!started) {
    000008D2 ED00                   MOV         #0,R13
    000008D4 E058                   MOV         #88,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008D6 02FE                   MOV.L       @(R0,R15),R2
    000008D8 2228                   TST         R2,R2
    000008DA 8F7D                   BF/S        L694
    000008DC EE78                   MOV         #120,R14
         Mines.c   387            time = 0;
    000008DE D359                   MOV.L       L792+4,R3  ; _time
         Mines.c   388            // Place mines, mine is -1
         Mines.c   389            // Do not place mines within 3x3 square of first click
         Mines.c   390            srand(rSeed);
    000008E0 D259                   MOV.L       L792+8,R2  ; _rSeed
    000008E2 23D2                   MOV.L       R13,@R3
    000008E4 D159                   MOV.L       L792+12,R1 ; _srand
    000008E6 410B                   JSR         @R1
    000008E8 6422                   MOV.L       @R2,R4
         Mines.c   391            for(i = 0; i < mines;) {
    000008EA A02D                   BRA         L695
    000008EC 1FD1                   MOV.L       R13,@(4,R15)
    000008EE              L696:                             
         Mines.c   392                int x = rand() % width;
    000008EE D258                   MOV.L       L792+16,R2 ; _rand
    000008F0 420B                   JSR         @R2
    000008F2 0009                   NOP
    000008F4 D357                   MOV.L       L792+20,R3 ; __modls
    000008F6 6103                   MOV         R0,R1
    000008F8 430B                   JSR         @R3
    000008FA 6093                   MOV         R9,R0
         Mines.c   393                int y = rand() % height;
    000008FC D254                   MOV.L       L792+16,R2 ; _rand
    000008FE 420B                   JSR         @R2
    00000900 6C03                   MOV         R0,R12
    00000902 6103                   MOV         R0,R1
    00000904 D353                   MOV.L       L792+20,R3 ; __modls
    00000906 430B                   JSR         @R3
    00000908 60B3                   MOV         R11,R0
    0000090A 2F02                   MOV.L       R0,@R15
    0000090C 0CE7                   MUL.L       R14,R12
    0000090E 031A                   STS         MACL,R3
    00000910 33AC                   ADD         R10,R3
    00000912 6033                   MOV         R3,R0
    00000914 1F32                   MOV.L       R3,@(8,R15)
    00000916 68F2                   MOV.L       @R15,R8
    00000918 4808                   SHLL2       R8
    0000091A 008E                   MOV.L       @(R0,R8),R0
    0000091C 88FF                   CMP/EQ      #-1,R0
    0000091E 8913                   BT          L695
    00000920 54F8                   MOV.L       @(32,R15),R4
    00000922 BED4                   BSR         _abs
    00000924 34C8                   SUB         R12,R4
    00000926 E301                   MOV         #1,R3
    00000928 3037                   CMP/GT      R3,R0
    0000092A 8907                   BT          L697
    0000092C 63F2                   MOV.L       @R15,R3
    0000092E 54F7                   MOV.L       @(28,R15),R4
    00000930 3438                   SUB         R3,R4
    00000932 BECC                   BSR         _abs
    00000934 0009                   NOP
    00000936 E201                   MOV         #1,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000938 3027                   CMP/GT      R2,R0
    0000093A 8B05                   BF          L695
    0000093C              L697:                             
         Mines.c   394                if(board[x][y] == -1 || (abs(cx-x) <= 1 && abs(cy-y) <= 1)) {
         Mines.c   395                    continue;  // Skip to the next iteration without incrementing i
         Mines.c   396                }
         Mines.c   397                else {
         Mines.c   398                    board[x][y] = -1;
    0000093C 50F2                   MOV.L       @(8,R15),R0
    0000093E E3FF                   MOV         #-1,R3
    00000940 0836                   MOV.L       R3,@(R0,R8)
         Mines.c   399                    i++;  // Increment i only if a mine is successfully placed
    00000942 52F1                   MOV.L       @(4,R15),R2
    00000944 7201                   ADD         #1,R2
    00000946 1F21                   MOV.L       R2,@(4,R15)
    00000948              L695:                             
    00000948 51F1                   MOV.L       @(4,R15),R1
    0000094A E054                   MOV         #84,R0
    0000094C 03FE                   MOV.L       @(R0,R15),R3
    0000094E 3133                   CMP/GE      R3,R1
    00000950 8BCD                   BF          L696
         Mines.c   400                }
         Mines.c   401            }
         Mines.c   402            // Write numbers
         Mines.c   403            for(i = 0; i<width; i++) {
    00000952 A03F                   BRA         L701
    00000954 6CD3                   MOV         R13,R12
    00000956              L702:                             
         Mines.c   404                for(j = 0; j<height; j++) {
    00000956 66D3                   MOV         R13,R6
    00000958 0CE7                   MUL.L       R14,R12
    0000095A 61C3                   MOV         R12,R1
    0000095C 62C3                   MOV         R12,R2
    0000095E 7201                   ADD         #1,R2
    00000960 1F23                   MOV.L       R2,@(12,R15)
    00000962 031A                   STS         MACL,R3
    00000964 33AC                   ADD         R10,R3
    00000966 71FF                   ADD         #-1,R1
    00000968 2F32                   MOV.L       R3,@R15
    0000096A A030                   BRA         L703
    0000096C 1F15                   MOV.L       R1,@(20,R15)
    0000096E              L704:                             
    0000096E 6363                   MOV         R6,R3
    00000970 4308                   SHLL2       R3
    00000972 1F31                   MOV.L       R3,@(4,R15)
    00000974 60F2                   MOV.L       @R15,R0
    00000976 003E                   MOV.L       @(R0,R3),R0
    00000978 88FF                   CMP/EQ      #-1,R0
    0000097A 8927                   BT          L705
         Mines.c   405                    if(board[i][j] != -1) {
         Mines.c   406                        int count = 0;
         Mines.c   407                        for(k = i-1; k<=i+1; k++) {
    0000097C 55F5                   MOV.L       @(20,R15),R5
    0000097E 6763                   MOV         R6,R7
    00000980 68D3                   MOV         R13,R8
    00000982 7701                   ADD         #1,R7
    00000984 6263                   MOV         R6,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000986 72FF                   ADD         #-1,R2
    00000988 A01A                   BRA         L706
    0000098A 1F24                   MOV.L       R2,@(16,R15)
    0000098C              L707:                             
         Mines.c   408                            for(l = j-1; l<=j+1; l++) {
    0000098C 54F4                   MOV.L       @(16,R15),R4
    0000098E 05E7                   MUL.L       R14,R5
    00000990 031A                   STS         MACL,R3
    00000992 33AC                   ADD         R10,R3
    00000994 3477                   CMP/GT      R7,R4
    00000996 8D12                   BT/S        L708
    00000998 1F32                   MOV.L       R3,@(8,R15)
    0000099A              L709:                             
         Mines.c   409                                if(k >= 0 && k < width && l >= 0 && l < height) {
    0000099A 4511                   CMP/PZ      R5
    0000099C 8B0C                   BF          L710
    0000099E 3593                   CMP/GE      R9,R5
    000009A0 890A                   BT          L710
    000009A2 4411                   CMP/PZ      R4
    000009A4 8B08                   BF          L710
    000009A6 34B3                   CMP/GE      R11,R4
    000009A8 8906                   BT          L710
         Mines.c   410                                    if(board[k][l] == -1) {
    000009AA 6043                   MOV         R4,R0
    000009AC 53F2                   MOV.L       @(8,R15),R3
    000009AE 4008                   SHLL2       R0
    000009B0 003E                   MOV.L       @(R0,R3),R0
    000009B2 88FF                   CMP/EQ      #-1,R0
    000009B4 8B00                   BF          L710
         Mines.c   411                                        count++;
    000009B6 7801                   ADD         #1,R8
    000009B8              L710:                             
    000009B8 7401                   ADD         #1,R4
    000009BA 3477                   CMP/GT      R7,R4
    000009BC 8BED                   BF          L709
    000009BE              L708:                             
    000009BE 7501                   ADD         #1,R5
    000009C0              L706:                             
    000009C0 52F3                   MOV.L       @(12,R15),R2
    000009C2 3527                   CMP/GT      R2,R5
    000009C4 8BE2                   BF          L707
         Mines.c   412                                    }
         Mines.c   413                                }
         Mines.c   414                            }
         Mines.c   415                        }
         Mines.c   416                        board[i][j] = count;
    000009C6 61F2                   MOV.L       @R15,R1
    000009C8 50F1                   MOV.L       @(4,R15),R0
    000009CA 0186                   MOV.L       R8,@(R0,R1)
    000009CC              L705:                             
    000009CC 7601                   ADD         #1,R6
    000009CE              L703:                             
    000009CE 36B3                   CMP/GE      R11,R6
    000009D0 8BCD                   BF          L704
    000009D2 7C01                   ADD         #1,R12
    000009D4              L701:                             
    000009D4 3C93                   CMP/GE      R9,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009D6 8BBE                   BF          L702
    000009D8              L694:                             
    000009D8 53F8                   MOV.L       @(32,R15),R3
    000009DA 03E7                   MUL.L       R14,R3
    000009DC 031A                   STS         MACL,R3
    000009DE 1F39                   MOV.L       R3,@(36,R15)
    000009E0 52F7                   MOV.L       @(28,R15),R2
    000009E2 4208                   SHLL2       R2
    000009E4 1F25                   MOV.L       R2,@(20,R15)
    000009E6 51F6                   MOV.L       @(24,R15),R1
    000009E8 331C                   ADD         R1,R3
    000009EA 332C                   ADD         R2,R3
    000009EC 6132                   MOV.L       @R3,R1
    000009EE 2118                   TST         R1,R1
    000009F0 8901                   BT          L712
    000009F2              L569:
         Mines.c   417                    }
         Mines.c   418                }
         Mines.c   419            }
         Mines.c   420        }
         Mines.c   421        if(revealed[cx][cy] != 0) {  // Opened or flagged
         Mines.c   422            return 0;
    000009F2 A065                   BRA         L693
    000009F4 E000                   MOV         #0,R0
    000009F6              L712:                             
         Mines.c   423        }
         Mines.c   424        revealed[cx][cy] = 1;
    000009F6 EC01                   MOV         #1,R12
    000009F8 53F6                   MOV.L       @(24,R15),R3
    000009FA 50F9                   MOV.L       @(36,R15),R0
    000009FC 52F5                   MOV.L       @(20,R15),R2
    000009FE 303C                   ADD         R3,R0
         Mines.c   425        ++cellsOpened;
    00000A00 D415                   MOV.L       L792+24,R4 ; _cellsOpened
    00000A02 02C6                   MOV.L       R12,@(R0,R2)
    00000A04 6342                   MOV.L       @R4,R3
    00000A06 7301                   ADD         #1,R3
    00000A08 2432                   MOV.L       R3,@R4
         Mines.c   426        if(board[cx][cy] == 0) {
    00000A0A 52F9                   MOV.L       @(36,R15),R2
    00000A0C 50F5                   MOV.L       @(20,R15),R0
    00000A0E 32AC                   ADD         R10,R2
    00000A10 032E                   MOV.L       @(R0,R2),R3
    00000A12 2338                   TST         R3,R3
    00000A14 8B4E                   BF          L713
         Mines.c   427            for(i = -1; i<=1; ++i) {
    00000A16 E3FF                   MOV         #-1,R3
    00000A18 A049                   BRA         L714
    00000A1A 1F33                   MOV.L       R3,@(12,R15)
    00000A1C              L715:                             
         Mines.c   428                for(j = -1; j<=1; ++j) {
    00000A1C E1FF                   MOV         #-1,R1
    00000A1E 1F11                   MOV.L       R1,@(4,R15)
    00000A20 54F7                   MOV.L       @(28,R15),R4
    00000A22 74FF                   ADD         #-1,R4
    00000A24 2F42                   MOV.L       R4,@R15
    00000A26 4408                   SHLL2       R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A28 53F3                   MOV.L       @(12,R15),R3
    00000A2A 55F8                   MOV.L       @(32,R15),R5
    00000A2C 353C                   ADD         R3,R5
    00000A2E 1F54                   MOV.L       R5,@(16,R15)
    00000A30 05E7                   MUL.L       R14,R5
    00000A32 051A                   STS         MACL,R5
    00000A34 52F6                   MOV.L       @(24,R15),R2
    00000A36 352C                   ADD         R2,R5
    00000A38 354C                   ADD         R4,R5
    00000A3A 6853                   MOV         R5,R8
    00000A3C A031                   BRA         L716
    00000A3E 1F52                   MOV.L       R5,@(8,R15)
    00000A40              L792:                             
    00000A40 <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM
    00000A44 <00000000>             .DATA.L     _time
    00000A48 <00000000>             .DATA.L     _rSeed
    00000A4C <00000000>             .DATA.L     _srand
    00000A50 <00000000>             .DATA.L     _rand
    00000A54 <00000000>             .DATA.L     __modls
    00000A58 <00000000>             .DATA.L     _cellsOpened
    00000A5C              L717:                             
         Mines.c   429                    if(revealed[cx+i][cy+j] == 2) {
    00000A5C 50F2                   MOV.L       @(8,R15),R0
    00000A5E 6002                   MOV.L       @R0,R0
    00000A60 8802                   CMP/EQ      #2,R0
    00000A62 8B05                   BF          L718
         Mines.c   430                        revealed[cx+i][cy+j] = 0;  // Unflag
    00000A64 28D2                   MOV.L       R13,@R8
         Mines.c   431                        (*pFlags)--;
    00000A66 E05C                   MOV         #92,R0
    00000A68 02FE                   MOV.L       @(R0,R15),R2
    00000A6A 6322                   MOV.L       @R2,R3
    00000A6C 73FF                   ADD         #-1,R3
    00000A6E 2232                   MOV.L       R3,@R2
    00000A70              L718:                             
         Mines.c   432                    }
         Mines.c   433                    click(cx+i,cy+j,board,revealed,width,height,mines,1,pFlags);
    00000A70 E05C                   MOV         #92,R0
    00000A72 66A3                   MOV         R10,R6
    00000A74 02FE                   MOV.L       @(R0,R15),R2
    00000A76 E05C                   MOV         #92,R0
    00000A78 2F26                   MOV.L       R2,@-R15
    00000A7A 2FC6                   MOV.L       R12,@-R15
    00000A7C 03FE                   MOV.L       @(R0,R15),R3
    00000A7E 2F36                   MOV.L       R3,@-R15
    00000A80 2FB6                   MOV.L       R11,@-R15
    00000A82 2F96                   MOV.L       R9,@-R15
    00000A84 57FB                   MOV.L       @(44,R15),R7
    00000A86 55F5                   MOV.L       @(20,R15),R5
    00000A88 BF08                   BSR         _click
    00000A8A 54F9                   MOV.L       @(36,R15),R4
    00000A8C 7F14                   ADD         #20,R15
    00000A8E 7804                   ADD         #4,R8
    00000A90 52F1                   MOV.L       @(4,R15),R2
    00000A92 7201                   ADD         #1,R2
    00000A94 1F21                   MOV.L       R2,@(4,R15)
    00000A96 63F2                   MOV.L       @R15,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A98 7301                   ADD         #1,R3
    00000A9A 2F32                   MOV.L       R3,@R15
    00000A9C 51F2                   MOV.L       @(8,R15),R1
    00000A9E 7104                   ADD         #4,R1
    00000AA0 1F12                   MOV.L       R1,@(8,R15)
    00000AA2              L716:                             
    00000AA2 53F1                   MOV.L       @(4,R15),R3
    00000AA4 33C7                   CMP/GT      R12,R3
    00000AA6 8BD9                   BF          L717
    00000AA8 51F3                   MOV.L       @(12,R15),R1
    00000AAA 7101                   ADD         #1,R1
    00000AAC 1F13                   MOV.L       R1,@(12,R15)
    00000AAE              L714:                             
    00000AAE 53F3                   MOV.L       @(12,R15),R3
    00000AB0 33C7                   CMP/GT      R12,R3
    00000AB2 8BB3                   BF          L715
    00000AB4              L713:                             
         Mines.c   434                }
         Mines.c   435            }
         Mines.c   436        }
         Mines.c   437        return board[cx][cy] == -1;
    00000AB4 50F9                   MOV.L       @(36,R15),R0
    00000AB6 30AC                   ADD         R10,R0
    00000AB8 53F5                   MOV.L       @(20,R15),R3
    00000ABA 003E                   MOV.L       @(R0,R3),R0
    00000ABC 88FF                   CMP/EQ      #-1,R0
    00000ABE 0029                   MOVT        R0
         Mines.c   438    }
    00000AC0              L693:                             
    00000AC0 7F28                   ADD         #40,R15
    00000AC2 4F16                   LDS.L       @R15+,MACL
    00000AC4 4F26                   LDS.L       @R15+,PR
    00000AC6 68F6                   MOV.L       @R15+,R8
    00000AC8 69F6                   MOV.L       @R15+,R9
    00000ACA 6AF6                   MOV.L       @R15+,R10
    00000ACC 6BF6                   MOV.L       @R15+,R11
    00000ACE 6CF6                   MOV.L       @R15+,R12
    00000AD0 6DF6                   MOV.L       @R15+,R13
    00000AD2 000B                   RTS
    00000AD4 6EF6                   MOV.L       @R15+,R14
         Mines.c   439    
         Mines.c   440    int chord(int cx, int cy, int board[30][30], int revealed[30][30],
    00000AD6              _chord:                          ; function: chord
                                                           ; frame size=84
    00000AD6 2FE6                   MOV.L       R14,@-R15
    00000AD8 2FD6                   MOV.L       R13,@-R15
    00000ADA EE01                   MOV         #1,R14
    00000ADC 2FC6                   MOV.L       R12,@-R15
    00000ADE 2FB6                   MOV.L       R11,@-R15
    00000AE0 2FA6                   MOV.L       R10,@-R15
         Mines.c   441     int width, int height, int mines, int started) {
         Mines.c   442        int i; int j; int k; int l;
         Mines.c   443        int flags = 0;
         Mines.c   444        int died = 0;
         Mines.c   445    
         Mines.c   446        for(i = -1; i<=1; ++i) {
    00000AE2 EAFF                   MOV         #-1,R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AE4 2F96                   MOV.L       R9,@-R15
    00000AE6 2F86                   MOV.L       R8,@-R15
    00000AE8 4F22                   STS.L       PR,@-R15
    00000AEA 4F12                   STS.L       MACL,@-R15
    00000AEC 7FE4                   ADD         #-28,R15
    00000AEE 1F44                   MOV.L       R4,@(16,R15)
    00000AF0 1F52                   MOV.L       R5,@(8,R15)
    00000AF2 E400                   MOV         #0,R4
    00000AF4 1F65                   MOV.L       R6,@(20,R15)
    00000AF6 1F73                   MOV.L       R7,@(12,R15)
    00000AF8 1F41                   MOV.L       R4,@(4,R15)
    00000AFA 1F46                   MOV.L       R4,@(24,R15)
    00000AFC 2FA2                   MOV.L       R10,@R15
    00000AFE 5BF2                   MOV.L       @(8,R15),R11
    00000B00 7BFF                   ADD         #-1,R11
    00000B02              L719:                             
         Mines.c   447            for(j = -1; j<=1; ++j) {
    00000B02 69A3                   MOV         R10,R9
    00000B04 63F2                   MOV.L       @R15,R3
    00000B06 EC78                   MOV         #120,R12
    00000B08 52F3                   MOV.L       @(12,R15),R2
    00000B0A 61B3                   MOV         R11,R1
    00000B0C 58F4                   MOV.L       @(16,R15),R8
    00000B0E 4108                   SHLL2       R1
    00000B10 383C                   ADD         R3,R8
    00000B12 08C7                   MUL.L       R12,R8
    00000B14 0C1A                   STS         MACL,R12
    00000B16 3C2C                   ADD         R2,R12
    00000B18 3C1C                   ADD         R1,R12
    00000B1A A012                   BRA         L720
    00000B1C 6DB3                   MOV         R11,R13
    00000B1E              L721:                             
         Mines.c   448                if(outOfBounds(cx+i, cy+j, width, height)) {
    00000B1E E044                   MOV         #68,R0
    00000B20 07FE                   MOV.L       @(R0,R15),R7
    00000B22 65D3                   MOV         R13,R5
    00000B24 E040                   MOV         #64,R0
    00000B26 06FE                   MOV.L       @(R0,R15),R6
    00000B28 BDC4                   BSR         _outOfBounds
    00000B2A 6483                   MOV         R8,R4
    00000B2C 2008                   TST         R0,R0
    00000B2E 8B05                   BF          L723
         Mines.c   449                    continue;
         Mines.c   450                }
         Mines.c   451                if(revealed[cx+i][cy+j] == 2) {
    00000B30 60C2                   MOV.L       @R12,R0
    00000B32 8802                   CMP/EQ      #2,R0
    00000B34 8B02                   BF          L723
         Mines.c   452                    flags++;
    00000B36 53F1                   MOV.L       @(4,R15),R3
    00000B38 7301                   ADD         #1,R3
    00000B3A 1F31                   MOV.L       R3,@(4,R15)
    00000B3C              L723:                             
    00000B3C 7901                   ADD         #1,R9
    00000B3E 7C04                   ADD         #4,R12
    00000B40 7D01                   ADD         #1,R13
    00000B42              L720:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B42 39E7                   CMP/GT      R14,R9
    00000B44 8BEB                   BF          L721
    00000B46 62F2                   MOV.L       @R15,R2
    00000B48 7201                   ADD         #1,R2
    00000B4A 32E7                   CMP/GT      R14,R2
    00000B4C 8FD9                   BF/S        L719
    00000B4E 2F22                   MOV.L       R2,@R15
         Mines.c   453                }
         Mines.c   454            }
         Mines.c   455        }
         Mines.c   456        if(flags != board[cx][cy]) {
    00000B50 52F4                   MOV.L       @(16,R15),R2
    00000B52 E378                   MOV         #120,R3
    00000B54 51F5                   MOV.L       @(20,R15),R1
    00000B56 0237                   MUL.L       R3,R2
    00000B58 52F2                   MOV.L       @(8,R15),R2
    00000B5A 001A                   STS         MACL,R0
    00000B5C 301C                   ADD         R1,R0
    00000B5E 4208                   SHLL2       R2
    00000B60 002E                   MOV.L       @(R0,R2),R0
    00000B62 52F1                   MOV.L       @(4,R15),R2
    00000B64 3200                   CMP/EQ      R0,R2
    00000B66 8901                   BT          L725
         Mines.c   457            return 0;
    00000B68 A041                   BRA         L726
    00000B6A E000                   MOV         #0,R0
    00000B6C              L725:                             
         Mines.c   458        }
         Mines.c   459        for(i = -1; i<=1; ++i) {
    00000B6C 1FA2                   MOV.L       R10,@(8,R15)
    00000B6E              L727:                             
    00000B6E 69B3                   MOV         R11,R9
         Mines.c   460            for(j = -1; j<=1; ++j) {
    00000B70 2FA2                   MOV.L       R10,@R15
    00000B72 E878                   MOV         #120,R8
    00000B74 53F2                   MOV.L       @(8,R15),R3
    00000B76 61B3                   MOV         R11,R1
    00000B78 5DF4                   MOV.L       @(16,R15),R13
    00000B7A 4108                   SHLL2       R1
    00000B7C 52F3                   MOV.L       @(12,R15),R2
    00000B7E 3D3C                   ADD         R3,R13
    00000B80 0D87                   MUL.L       R8,R13
    00000B82 081A                   STS         MACL,R8
    00000B84 382C                   ADD         R2,R8
    00000B86 381C                   ADD         R1,R8
    00000B88 A028                   BRA         L728
    00000B8A 6CB3                   MOV         R11,R12
    00000B8C              L729:                             
         Mines.c   461                if(outOfBounds(cx+i, cy+j, width, height)) {
    00000B8C E044                   MOV         #68,R0
    00000B8E 65C3                   MOV         R12,R5
    00000B90 07FE                   MOV.L       @(R0,R15),R7
    00000B92 E040                   MOV         #64,R0
    00000B94 06FE                   MOV.L       @(R0,R15),R6
    00000B96 BD8D                   BSR         _outOfBounds
    00000B98 64D3                   MOV         R13,R4
    00000B9A 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B9C 8B18                   BF          L731
         Mines.c   462                    continue;
         Mines.c   463                }
         Mines.c   464                if(revealed[cx+i][cy+j] == 0) {
    00000B9E 6282                   MOV.L       @R8,R2
    00000BA0 2228                   TST         R2,R2
    00000BA2 8B15                   BF          L731
         Mines.c   465                    if(click(cx+i,cy+j,board,revealed,width,height,mines,1,&flags)){
    00000BA4 63F3                   MOV         R15,R3
    00000BA6 7304                   ADD         #4,R3
    00000BA8 2F36                   MOV.L       R3,@-R15
    00000BAA E050                   MOV         #80,R0
    00000BAC 2FE6                   MOV.L       R14,@-R15
    00000BAE 6593                   MOV         R9,R5
    00000BB0 02FE                   MOV.L       @(R0,R15),R2
    00000BB2 E050                   MOV         #80,R0
    00000BB4 2F26                   MOV.L       R2,@-R15
    00000BB6 03FE                   MOV.L       @(R0,R15),R3
    00000BB8 2F36                   MOV.L       R3,@-R15
    00000BBA E050                   MOV         #80,R0
    00000BBC 02FE                   MOV.L       @(R0,R15),R2
    00000BBE 2F26                   MOV.L       R2,@-R15
    00000BC0 57F8                   MOV.L       @(32,R15),R7
    00000BC2 56FA                   MOV.L       @(40,R15),R6
    00000BC4 BE6A                   BSR         _click
    00000BC6 64D3                   MOV         R13,R4
    00000BC8 2008                   TST         R0,R0
    00000BCA 8D01                   BT/S        L731
    00000BCC 7F14                   ADD         #20,R15
         Mines.c   466                        died = 1;
    00000BCE 1FE6                   MOV.L       R14,@(24,R15)
    00000BD0              L731:                             
    00000BD0 63F2                   MOV.L       @R15,R3
    00000BD2 7901                   ADD         #1,R9
    00000BD4 7301                   ADD         #1,R3
    00000BD6 7804                   ADD         #4,R8
    00000BD8 2F32                   MOV.L       R3,@R15
    00000BDA 7C01                   ADD         #1,R12
    00000BDC              L728:                             
    00000BDC 63F2                   MOV.L       @R15,R3
    00000BDE 33E7                   CMP/GT      R14,R3
    00000BE0 8BD4                   BF          L729
    00000BE2 51F2                   MOV.L       @(8,R15),R1
    00000BE4 7101                   ADD         #1,R1
    00000BE6 31E7                   CMP/GT      R14,R1
    00000BE8 8FC1                   BF/S        L727
    00000BEA 1F12                   MOV.L       R1,@(8,R15)
         Mines.c   467                    }
         Mines.c   468                }
         Mines.c   469            }
         Mines.c   470        }
         Mines.c   471        return died;
    00000BEC 50F6                   MOV.L       @(24,R15),R0
         Mines.c   472    }
    00000BEE              L726:                             
    00000BEE 7F1C                   ADD         #28,R15
    00000BF0 4F16                   LDS.L       @R15+,MACL




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BF2 4F26                   LDS.L       @R15+,PR
    00000BF4 68F6                   MOV.L       @R15+,R8
    00000BF6 69F6                   MOV.L       @R15+,R9
    00000BF8 6AF6                   MOV.L       @R15+,R10
    00000BFA 6BF6                   MOV.L       @R15+,R11
    00000BFC 6CF6                   MOV.L       @R15+,R12
    00000BFE 6DF6                   MOV.L       @R15+,R13
    00000C00 000B                   RTS
    00000C02 6EF6                   MOV.L       @R15+,R14
         Mines.c   473    
         Mines.c   474    
         Mines.c   475    int game() {
    00000C04              _game:                           ; function: game
                                                           ; frame size=64
    00000C04 2FE6                   MOV.L       R14,@-R15
         Mines.c   476        int i; int j; int k; int l;
         Mines.c   477        minCamX = 3; minCamY = 2;
    00000C06 E303                   MOV         #3,R3
    00000C08 D238                   MOV.L       L794+26,R2 ; _minCamX
    00000C0A E102                   MOV         #2,R1
    00000C0C D038                   MOV.L       L794+30,R0 ; _minCamY
    00000C0E 2FD6                   MOV.L       R13,@-R15
    00000C10 2FC6                   MOV.L       R12,@-R15
    00000C12 2FB6                   MOV.L       R11,@-R15
    00000C14 2FA6                   MOV.L       R10,@-R15
    00000C16 2F96                   MOV.L       R9,@-R15
    00000C18 2F86                   MOV.L       R8,@-R15
    00000C1A E900                   MOV         #0,R9
    00000C1C DA2E                   MOV.L       L794+6,R10 ; _dead
    00000C1E 4F22                   STS.L       PR,@-R15
    00000C20 4F12                   STS.L       MACL,@-R15
    00000C22 7FFC                   ADD         #-4,R15
    00000C24 D82B                   MOV.L       L794+2,R8  ; _height
    00000C26 DB2D                   MOV.L       L794+10,R11; _camY
    00000C28 DC2D                   MOV.L       L794+14,R12; _camX
    00000C2A DD2E                   MOV.L       L794+18,R13; _cursorY
    00000C2C DE2E                   MOV.L       L794+22,R14; _cursorX
    00000C2E 2232                   MOV.L       R3,@R2
    00000C30 2012                   MOV.L       R1,@R0
         Mines.c   478        maxCamX = width-5; maxCamY = height-4;
    00000C32 D130                   MOV.L       L794+34,R1 ; _width
    00000C34 D230                   MOV.L       L794+38,R2 ; _maxCamX
    00000C36 6312                   MOV.L       @R1,R3
    00000C38 73FB                   ADD         #-5,R3
    00000C3A 2232                   MOV.L       R3,@R2
    00000C3C 6082                   MOV.L       @R8,R0
    00000C3E 70FC                   ADD         #-4,R0
    00000C40 D22E                   MOV.L       L794+42,R2 ; _maxCamY
    00000C42 2202                   MOV.L       R0,@R2
         Mines.c   479        camX = width/2; camY = height/2;
    00000C44 6312                   MOV.L       @R1,R3
    00000C46 6193                   MOV         R9,R1
    00000C48 3137                   CMP/GT      R3,R1
    00000C4A 331E                   ADDC        R1,R3
    00000C4C 4321                   SHAR        R3
    00000C4E 2C32                   MOV.L       R3,@R12
    00000C50 6282                   MOV.L       @R8,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C52 6313                   MOV         R1,R3
    00000C54 3327                   CMP/GT      R2,R3
    00000C56 323E                   ADDC        R3,R2
    00000C58 4221                   SHAR        R2
    00000C5A 2B22                   MOV.L       R2,@R11
         Mines.c   480        cursorX = camX; cursorY = camY;
    00000C5C 61C2                   MOV.L       @R12,R1
    00000C5E 2E12                   MOV.L       R1,@R14
    00000C60 63B2                   MOV.L       @R11,R3
    00000C62 2D32                   MOV.L       R3,@R13
         Mines.c   481        started = 0;
    00000C64 D226                   MOV.L       L794+46,R2 ; _started
    00000C66 2292                   MOV.L       R9,@R2
         Mines.c   482        dead = 0;
    00000C68 2A92                   MOV.L       R9,@R10
         Mines.c   483        won = 0;
    00000C6A D326                   MOV.L       L794+50,R3 ; _won
         Mines.c   484        flags = 0;
    00000C6C D126                   MOV.L       L794+54,R1 ; _flags
    00000C6E 2392                   MOV.L       R9,@R3
    00000C70 2192                   MOV.L       R9,@R1
         Mines.c   485        cellsOpened = 0;
    00000C72 D226                   MOV.L       L794+58,R2 ; _cellsOpened
    00000C74 2292                   MOV.L       R9,@R2
         Mines.c   486    
         Mines.c   487        // initialize board / revealed arrays
         Mines.c   488        for(i = 0; i<width; i++) {
    00000C76 A015                   BRA         L734
    00000C78 6693                   MOV         R9,R6
    00000C7A              L735:                             
         Mines.c   489            for(j = 0; j<height; j++) {
    00000C7A 6593                   MOV         R9,R5
    00000C7C 6493                   MOV         R9,R4
    00000C7E E278                   MOV         #120,R2
    00000C80 0627                   MUL.L       R2,R6
    00000C82 021A                   STS         MACL,R2
    00000C84 A00A                   BRA         L736
    00000C86 2F22                   MOV.L       R2,@R15
    00000C88              L737:                             
         Mines.c   490                board[i][j] = 0;
    00000C88 D321                   MOV.L       L794+62,R3 ; _board
    00000C8A 7501                   ADD         #1,R5
    00000C8C 60F2                   MOV.L       @R15,R0
    00000C8E 303C                   ADD         R3,R0
    00000C90 0496                   MOV.L       R9,@(R0,R4)
         Mines.c   491                revealed[i][j] = 0;
    00000C92 D220                   MOV.L       L794+66,R2 ; _revealed
    00000C94 60F2                   MOV.L       @R15,R0
    00000C96 302C                   ADD         R2,R0
    00000C98 0496                   MOV.L       R9,@(R0,R4)
    00000C9A 7404                   ADD         #4,R4
    00000C9C              L736:                             
    00000C9C 6382                   MOV.L       @R8,R3
    00000C9E 3533                   CMP/GE      R3,R5
    00000CA0 8BF2                   BF          L737
    00000CA2 7601                   ADD         #1,R6
    00000CA4              L734:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CA4 D213                   MOV.L       L794+34,R2 ; _width
    00000CA6 6322                   MOV.L       @R2,R3
    00000CA8 3633                   CMP/GE      R3,R6
    00000CAA 8BE6                   BF          L735
         Mines.c   492            }
         Mines.c   493        }
         Mines.c   494    
         Mines.c   495        updateBoard(board, revealed, camX, camY, width, height,
         Mines.c   496         cursorX, cursorY, dead, totalMines-flags);
    00000CAC D016                   MOV.L       L794+54,R0 ; _flags
    00000CAE 6302                   MOV.L       @R0,R3
    00000CB0 D219                   MOV.L       L794+70,R2 ; _totalMines
    00000CB2 6122                   MOV.L       @R2,R1
    00000CB4 3138                   SUB         R3,R1
    00000CB6 2F16                   MOV.L       R1,@-R15
    00000CB8 62A2                   MOV.L       @R10,R2
    00000CBA 2F26                   MOV.L       R2,@-R15
    00000CBC 61D2                   MOV.L       @R13,R1
    00000CBE 2F16                   MOV.L       R1,@-R15
    00000CC0 62E2                   MOV.L       @R14,R2
    00000CC2 2F26                   MOV.L       R2,@-R15
    00000CC4 6182                   MOV.L       @R8,R1
    00000CC6 2F16                   MOV.L       R1,@-R15
    00000CC8 D10A                   MOV.L       L794+34,R1 ; _width
    00000CCA 6212                   MOV.L       @R1,R2
    00000CCC 2F26                   MOV.L       R2,@-R15
         Mines.c   497    
         Mines.c   498        while(1){
    00000CCE A16C                   BRA         L776
    00000CD0 0009                   NOP
    00000CD2              L794:                             
    00000CD2 0000                   .DATA.W     0
    00000CD4 <00000000>             .DATA.L     _height
    00000CD8 <00000000>             .DATA.L     _dead
    00000CDC <00000000>             .DATA.L     _camY
    00000CE0 <00000000>             .DATA.L     _camX
    00000CE4 <00000000>             .DATA.L     _cursorY
    00000CE8 <00000000>             .DATA.L     _cursorX
    00000CEC <00000000>             .DATA.L     _minCamX
    00000CF0 <00000000>             .DATA.L     _minCamY
    00000CF4 <00000000>             .DATA.L     _width
    00000CF8 <00000000>             .DATA.L     _maxCamX
    00000CFC <00000000>             .DATA.L     _maxCamY
    00000D00 <00000000>             .DATA.L     _started
    00000D04 <00000000>             .DATA.L     _won
    00000D08 <00000000>             .DATA.L     _flags
    00000D0C <00000000>             .DATA.L     _cellsOpened
    00000D10 <00000000>             .DATA.L     _board
    00000D14 <00000000>             .DATA.L     _revealed
    00000D18 <00000000>             .DATA.L     _totalMines
    00000D1C              L739:                             
         Mines.c   499            GetKey(&key);
    00000D1C D43E                   MOV.L       L795+12,R4 ; _key
    00000D1E D33F                   MOV.L       L795+16,R3 ; _GetKey
    00000D20 430B                   JSR         @R3
    00000D22 0009                   NOP
    00000D24 D63C                   MOV.L       L795+12,R6 ; _key




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D26 E378                   MOV         #120,R3
    00000D28 62E2                   MOV.L       @R14,R2
    00000D2A 0237                   MUL.L       R3,R2
    00000D2C D13C                   MOV.L       L795+20,R1 ; _revealed
    00000D2E 051A                   STS         MACL,R5
    00000D30 64D2                   MOV.L       @R13,R4
    00000D32 351C                   ADD         R1,R5
    00000D34 6062                   MOV.L       @R6,R0
    00000D36 9169                   MOV.W       L795,R1    ; H'7542
    00000D38 3010                   CMP/EQ      R1,R0
    00000D3A 8D1D                   BT/S        L607
    00000D3C 4408                   SHLL2       R4
    00000D3E 9166                   MOV.W       L795+2,R1  ; H'7547
    00000D40 3010                   CMP/EQ      R1,R0
    00000D42 8931                   BT          L608
    00000D44 9164                   MOV.W       L795+4,R1  ; H'7544
    00000D46 3010                   CMP/EQ      R1,R0
    00000D48 8948                   BT          L609
    00000D4A 9162                   MOV.W       L795+6,R1  ; H'7545
    00000D4C 3010                   CMP/EQ      R1,R0
    00000D4E 8973                   BT          L610
    00000D50 8837                   CMP/EQ      #55,R0
    00000D52 8B01                   BF          L796
    00000D54 A089                   BRA         L611
    00000D56 0009                   NOP
    00000D58              L796:                             
    00000D58 8838                   CMP/EQ      #56,R0
    00000D5A 8B01                   BF          L797
    00000D5C A0D7                   BRA         L612
    00000D5E 0009                   NOP
    00000D60              L797:                             
    00000D60 9158                   MOV.W       L795+8,R1  ; H'7532
    00000D62 3010                   CMP/EQ      R1,R0
    00000D64 8B01                   BF          L798
    00000D66 A0EB                   BRA         L613
    00000D68 0009                   NOP
    00000D6A              L798:                             
    00000D6A 9154                   MOV.W       L795+10,R1 ; H'7534
    00000D6C 3010                   CMP/EQ      R1,R0
    00000D6E 8B01                   BF          L799
    00000D70 A0EA                   BRA         L614
    00000D72 0009                   NOP
    00000D74              L799:                             
    00000D74 A0EF                   BRA         L740
    00000D76 0009                   NOP
    00000D78              L607:                            ; case label 
         Mines.c   500            switch(key) {
         Mines.c   501                case KEY_CTRL_UP:
         Mines.c   502                    if(cursorY > 0) {
    00000D78 62D2                   MOV.L       @R13,R2
    00000D7A 4215                   CMP/PL      R2
    00000D7C 8B02                   BF          L741
         Mines.c   503                        cursorY--;
    00000D7E 60D2                   MOV.L       @R13,R0
    00000D80 70FF                   ADD         #-1,R0
    00000D82 2D02                   MOV.L       R0,@R13
    00000D84              L741:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Mines.c   504                    }
         Mines.c   505                    if(camY > minCamY && cursorY < camY) {
    00000D84 D127                   MOV.L       L795+24,R1 ; _minCamY
    00000D86 6312                   MOV.L       @R1,R3
    00000D88 62B2                   MOV.L       @R11,R2
    00000D8A 3237                   CMP/GT      R3,R2
    00000D8C 8901                   BT          L800
    00000D8E A0E2                   BRA         L740
    00000D90 0009                   NOP
    00000D92              L800:                             
    00000D92 62B2                   MOV.L       @R11,R2
    00000D94 D324                   MOV.L       L795+28,R3 ; _cursorY
    00000D96 6032                   MOV.L       @R3,R0
    00000D98 3023                   CMP/GE      R2,R0
    00000D9A 8B01                   BF          L801
    00000D9C A0DB                   BRA         L740
    00000D9E 0009                   NOP
    00000DA0              L801:                             
         Mines.c   506                        camY--;
    00000DA0 61B2                   MOV.L       @R11,R1
    00000DA2 71FF                   ADD         #-1,R1
         Mines.c   507                    }
         Mines.c   508                    break;
    00000DA4 A0D7                   BRA         L740
    00000DA6 2B12                   MOV.L       R1,@R11
    00000DA8              L608:                            ; case label 
         Mines.c   509                case KEY_CTRL_DOWN:
         Mines.c   510                    if(cursorY < height-1) {
    00000DA8 6282                   MOV.L       @R8,R2
    00000DAA 72FF                   ADD         #-1,R2
    00000DAC 61D2                   MOV.L       @R13,R1
    00000DAE 3123                   CMP/GE      R2,R1
    00000DB0 8902                   BT          L743
         Mines.c   511                        cursorY++;
    00000DB2 60D2                   MOV.L       @R13,R0
    00000DB4 7001                   ADD         #1,R0
    00000DB6 2D02                   MOV.L       R0,@R13
    00000DB8              L743:                             
         Mines.c   512                    }
         Mines.c   513                    if(camY <= maxCamY && cursorY > camY) {
    00000DB8 D11C                   MOV.L       L795+32,R1 ; _maxCamY
    00000DBA 6312                   MOV.L       @R1,R3
    00000DBC 62B2                   MOV.L       @R11,R2
    00000DBE 3237                   CMP/GT      R3,R2
    00000DC0 8B01                   BF          L802
    00000DC2 A0C8                   BRA         L740
    00000DC4 0009                   NOP
    00000DC6              L802:                             
    00000DC6 62B2                   MOV.L       @R11,R2
    00000DC8 D317                   MOV.L       L795+28,R3 ; _cursorY
    00000DCA 6032                   MOV.L       @R3,R0
    00000DCC 3027                   CMP/GT      R2,R0
    00000DCE 8901                   BT          L803
    00000DD0 A0C1                   BRA         L740
    00000DD2 0009                   NOP
    00000DD4              L803:                             
         Mines.c   514                        camY++;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DD4 61B2                   MOV.L       @R11,R1
    00000DD6 7101                   ADD         #1,R1
         Mines.c   515                    }
         Mines.c   516                    break;
    00000DD8 A0BD                   BRA         L740
    00000DDA 2B12                   MOV.L       R1,@R11
    00000DDC              L609:                            ; case label 
         Mines.c   517                case KEY_CTRL_LEFT:
         Mines.c   518                    if(cursorX > 0) {
    00000DDC 62E2                   MOV.L       @R14,R2
    00000DDE 4215                   CMP/PL      R2
    00000DE0 8B02                   BF          L745
         Mines.c   519                        cursorX--;
    00000DE2 60E2                   MOV.L       @R14,R0
    00000DE4 70FF                   ADD         #-1,R0
    00000DE6 2E02                   MOV.L       R0,@R14
    00000DE8              L745:                             
         Mines.c   520                    }
         Mines.c   521                    if(camX > minCamX && cursorX < camX) {
    00000DE8 D111                   MOV.L       L795+36,R1 ; _minCamX
    00000DEA 6312                   MOV.L       @R1,R3
    00000DEC 62C2                   MOV.L       @R12,R2
    00000DEE 3237                   CMP/GT      R3,R2
    00000DF0 8901                   BT          L804
    00000DF2 A0B0                   BRA         L740
    00000DF4 0009                   NOP
    00000DF6              L804:                             
    00000DF6 62C2                   MOV.L       @R12,R2
    00000DF8 D30E                   MOV.L       L795+40,R3 ; _cursorX
    00000DFA 6032                   MOV.L       @R3,R0
    00000DFC 3023                   CMP/GE      R2,R0
    00000DFE 8B01                   BF          L805
    00000E00 A0A9                   BRA         L740
    00000E02 0009                   NOP
    00000E04              L805:                             
         Mines.c   522                        camX--;
    00000E04 61C2                   MOV.L       @R12,R1
    00000E06 71FF                   ADD         #-1,R1
         Mines.c   523                    }
         Mines.c   524                    break;
    00000E08 A0A5                   BRA         L740
    00000E0A 2C12                   MOV.L       R1,@R12
    00000E0C              L795:                             
    00000E0C 7542                   .DATA.W     H'7542
    00000E0E 7547                   .DATA.W     H'7547
    00000E10 7544                   .DATA.W     H'7544
    00000E12 7545                   .DATA.W     H'7545
    00000E14 7532                   .DATA.W     H'7532
    00000E16 7534                   .DATA.W     H'7534
    00000E18 <00000000>             .DATA.L     _key
    00000E1C <00000000>             .DATA.L     _GetKey
    00000E20 <00000000>             .DATA.L     _revealed
    00000E24 <00000000>             .DATA.L     _minCamY
    00000E28 <00000000>             .DATA.L     _cursorY
    00000E2C <00000000>             .DATA.L     _maxCamY
    00000E30 <00000000>             .DATA.L     _minCamX
    00000E34 <00000000>             .DATA.L     _cursorX




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E38              L610:                            ; case label 
         Mines.c   525                case KEY_CTRL_RIGHT:
         Mines.c   526                    if(cursorX < width-1) {
    00000E38 D065                   MOV.L       L806+2,R0  ; _width
    00000E3A 6202                   MOV.L       @R0,R2
    00000E3C 61E2                   MOV.L       @R14,R1
    00000E3E 72FF                   ADD         #-1,R2
    00000E40 3123                   CMP/GE      R2,R1
    00000E42 8902                   BT          L747
         Mines.c   527                        cursorX++;
    00000E44 62E2                   MOV.L       @R14,R2
    00000E46 7201                   ADD         #1,R2
    00000E48 2E22                   MOV.L       R2,@R14
    00000E4A              L747:                             
         Mines.c   528                    }
         Mines.c   529                    if(camX <= maxCamX && cursorX > camX) {
    00000E4A D062                   MOV.L       L806+6,R0  ; _maxCamX
    00000E4C 61C2                   MOV.L       @R12,R1
    00000E4E 6302                   MOV.L       @R0,R3
    00000E50 3137                   CMP/GT      R3,R1
    00000E52 8B01                   BF          L807
    00000E54 A07F                   BRA         L740
    00000E56 0009                   NOP
    00000E58              L807:                             
    00000E58 62C2                   MOV.L       @R12,R2
    00000E5A D35F                   MOV.L       L806+10,R3 ; _cursorX
    00000E5C 6132                   MOV.L       @R3,R1
    00000E5E 3127                   CMP/GT      R2,R1
    00000E60 8B79                   BF          L740
         Mines.c   530                        camX++;
    00000E62 60C2                   MOV.L       @R12,R0
    00000E64 7001                   ADD         #1,R0
         Mines.c   531                    }
         Mines.c   532                    break;
    00000E66 A076                   BRA         L740
    00000E68 2C02                   MOV.L       R0,@R12
    00000E6A              L611:                            ; case label 
         Mines.c   533                case KEY_CHAR_7:  // Click
         Mines.c   534                    if(!dead) {
    00000E6A 62A2                   MOV.L       @R10,R2
    00000E6C 2228                   TST         R2,R2
    00000E6E 8B4A                   BF          L749
    00000E70 D25A                   MOV.L       L806+14,R2 ; _started
    00000E72 6043                   MOV         R4,R0
    00000E74 015E                   MOV.L       @(R0,R5),R1
    00000E76 2118                   TST         R1,R1
    00000E78 8F17                   BF/S        L750
    00000E7A 6622                   MOV.L       @R2,R6
         Mines.c   535                        if(revealed[cursorX][cursorY] == 0) {
         Mines.c   536                            dead = click(cursorX, cursorY, board, revealed, 
         Mines.c   537                            width, height, totalMines, started, &flags);
    00000E7C D158                   MOV.L       L806+18,R1 ; _flags
    00000E7E 2F16                   MOV.L       R1,@-R15
    00000E80 2F66                   MOV.L       R6,@-R15
    00000E82 D058                   MOV.L       L806+22,R0 ; _totalMines
    00000E84 D758                   MOV.L       L806+26,R7 ; _revealed
    00000E86 6302                   MOV.L       @R0,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E88 D658                   MOV.L       L806+30,R6 ; _board
    00000E8A 2F36                   MOV.L       R3,@-R15
    00000E8C 6282                   MOV.L       @R8,R2
    00000E8E 2F26                   MOV.L       R2,@-R15
    00000E90 D24F                   MOV.L       L806+2,R2  ; _width
    00000E92 6322                   MOV.L       @R2,R3
    00000E94 2F36                   MOV.L       R3,@-R15
    00000E96 65D2                   MOV.L       @R13,R5
    00000E98 BD00                   BSR         _click
    00000E9A 64E2                   MOV.L       @R14,R4
    00000E9C 7F14                   ADD         #20,R15
         Mines.c   538                            if(dead) {
    00000E9E 6203                   MOV         R0,R2
    00000EA0 2228                   TST         R2,R2
    00000EA2 8F19                   BF/S        L570
    00000EA4 2A02                   MOV.L       R0,@R10
         Mines.c   539                                updateBoard(board, revealed, camX, camY,
         Mines.c   540                                width, height, cursorX, cursorY, dead, totalMines-flags);
    00000EA6 A02E                   BRA         L749
    00000EA8 0009                   NOP
    00000EAA              L750:                             
         Mines.c   541                            }
         Mines.c   542                        }
         Mines.c   543                        else if(revealed[cursorX][cursorY] == 1) {
    00000EAA 6053                   MOV         R5,R0
    00000EAC 004E                   MOV.L       @(R0,R4),R0
    00000EAE 8801                   CMP/EQ      #1,R0
    00000EB0 8B29                   BF          L749
         Mines.c   544                            dead = chord(cursorX, cursorY, board, revealed, 
         Mines.c   545                            width, height, totalMines, started);
    00000EB2 2F66                   MOV.L       R6,@-R15
    00000EB4 D14B                   MOV.L       L806+22,R1 ; _totalMines
    00000EB6 6012                   MOV.L       @R1,R0
    00000EB8 D74B                   MOV.L       L806+26,R7 ; _revealed
    00000EBA 2F06                   MOV.L       R0,@-R15
    00000EBC 6382                   MOV.L       @R8,R3
    00000EBE 2F36                   MOV.L       R3,@-R15
    00000EC0 D343                   MOV.L       L806+2,R3  ; _width
    00000EC2 6032                   MOV.L       @R3,R0
    00000EC4 D649                   MOV.L       L806+30,R6 ; _board
    00000EC6 2F06                   MOV.L       R0,@-R15
    00000EC8 65D2                   MOV.L       @R13,R5
    00000ECA BE04                   BSR         _chord
    00000ECC 64E2                   MOV.L       @R14,R4
    00000ECE 7F10                   ADD         #16,R15
         Mines.c   546                            if(dead) {
    00000ED0 6303                   MOV         R0,R3
    00000ED2 2338                   TST         R3,R3
    00000ED4 8D17                   BT/S        L749
    00000ED6 2A02                   MOV.L       R0,@R10
    00000ED8              L570:
         Mines.c   547                                updateBoard(board, revealed, camX, camY,
         Mines.c   548                                width, height, cursorX, cursorY, dead, totalMines-flags);
    00000ED8 D141                   MOV.L       L806+18,R1 ; _flags
    00000EDA 6312                   MOV.L       @R1,R3
    00000EDC D041                   MOV.L       L806+22,R0 ; _totalMines
    00000EDE 6202                   MOV.L       @R0,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000EE0 D541                   MOV.L       L806+26,R5 ; _revealed
    00000EE2 3238                   SUB         R3,R2
    00000EE4 D441                   MOV.L       L806+30,R4 ; _board
    00000EE6 2F26                   MOV.L       R2,@-R15
    00000EE8 62A2                   MOV.L       @R10,R2
    00000EEA 2F26                   MOV.L       R2,@-R15
    00000EEC 60D2                   MOV.L       @R13,R0
    00000EEE 2F06                   MOV.L       R0,@-R15
    00000EF0 62E2                   MOV.L       @R14,R2
    00000EF2 2F26                   MOV.L       R2,@-R15
    00000EF4 6082                   MOV.L       @R8,R0
    00000EF6 2F06                   MOV.L       R0,@-R15
    00000EF8 D035                   MOV.L       L806+2,R0  ; _width
    00000EFA 6202                   MOV.L       @R0,R2
    00000EFC 2F26                   MOV.L       R2,@-R15
    00000EFE 67B2                   MOV.L       @R11,R7
    00000F00 BBEC                   BSR         _updateBoard
    00000F02 66C2                   MOV.L       @R12,R6
    00000F04 7F18                   ADD         #24,R15
    00000F06              L749:                             
         Mines.c   549                            }
         Mines.c   550                        }
         Mines.c   551                    }
         Mines.c   552                    started = 1;
    00000F06 E201                   MOV         #1,R2
    00000F08 D334                   MOV.L       L806+14,R3 ; _started
         Mines.c   553                    break;
    00000F0A A024                   BRA         L740
    00000F0C 2322                   MOV.L       R2,@R3
    00000F0E              L612:                            ; case label 
         Mines.c   554                case KEY_CHAR_8:  // Flag
         Mines.c   555                    if(!dead) {
    00000F0E 60A2                   MOV.L       @R10,R0
    00000F10 2008                   TST         R0,R0
    00000F12 8B20                   BF          L740
         Mines.c   556                        if(revealed[cursorX][cursorY] == 0) {
    00000F14 6043                   MOV         R4,R0
    00000F16 025E                   MOV.L       @(R0,R5),R2
    00000F18 2228                   TST         R2,R2
    00000F1A 8B07                   BF          L756
         Mines.c   557                            revealed[cursorX][cursorY] = 2;
         Mines.c   558                            flags++;
    00000F1C D130                   MOV.L       L806+18,R1 ; _flags
    00000F1E 354C                   ADD         R4,R5
    00000F20 E202                   MOV         #2,R2
    00000F22 2522                   MOV.L       R2,@R5
    00000F24 6012                   MOV.L       @R1,R0
    00000F26 7001                   ADD         #1,R0
    00000F28 A015                   BRA         L740
    00000F2A 2102                   MOV.L       R0,@R1
    00000F2C              L756:                             
         Mines.c   559                        }
         Mines.c   560                        else if(revealed[cursorX][cursorY] == 2) {
    00000F2C 005E                   MOV.L       @(R0,R5),R0
    00000F2E 8802                   CMP/EQ      #2,R0
    00000F30 8B11                   BF          L740
         Mines.c   561                            revealed[cursorX][cursorY] = 0;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F32 354C                   ADD         R4,R5
         Mines.c   562                            flags--;
    00000F34 D12A                   MOV.L       L806+18,R1 ; _flags
    00000F36 2592                   MOV.L       R9,@R5
    00000F38 6212                   MOV.L       @R1,R2
    00000F3A 72FF                   ADD         #-1,R2
         Mines.c   563                        }
         Mines.c   564                    }
         Mines.c   565                    break;
    00000F3C A00B                   BRA         L740
    00000F3E 2122                   MOV.L       R2,@R1
    00000F40              L613:                            ; case label 
         Mines.c   566                case KEY_CTRL_EXIT:
         Mines.c   567                    difficultySelect();
    00000F40 B091                   BSR         _difficultySelect
    00000F42 0009                   NOP
    00000F44 A005                   BRA         L571
    00000F46 0009                   NOP
    00000F48              L614:                            ; case label 
         Mines.c   568                    return 0;
         Mines.c   569                    break;
         Mines.c   570                case KEY_CTRL_EXE:
         Mines.c   571                    if(dead) {
    00000F48 61A2                   MOV.L       @R10,R1
    00000F4A 2118                   TST         R1,R1
    00000F4C 8903                   BT          L740
         Mines.c   572                        difficultySelect();
    00000F4E B08A                   BSR         _difficultySelect
    00000F50 0009                   NOP
    00000F52              L571:
         Mines.c   573                        return 0;
    00000F52 A031                   BRA         L759
    00000F54 E000                   MOV         #0,R0
    00000F56              L740:                             
         Mines.c   574                    }
         Mines.c   575                    break;
         Mines.c   576            }
         Mines.c   577            if(cellsOpened >= width*height-totalMines && !dead) {
    00000F56 6382                   MOV.L       @R8,R3
    00000F58 D11D                   MOV.L       L806+2,R1  ; _width
    00000F5A 6212                   MOV.L       @R1,R2
    00000F5C D124                   MOV.L       L806+34,R1 ; _cellsOpened
    00000F5E 0237                   MUL.L       R3,R2
    00000F60 D220                   MOV.L       L806+22,R2 ; _totalMines
    00000F62 031A                   STS         MACL,R3
    00000F64 6022                   MOV.L       @R2,R0
    00000F66 3308                   SUB         R0,R3
    00000F68 6212                   MOV.L       @R1,R2
    00000F6A 3233                   CMP/GE      R3,R2
    00000F6C 8B0C                   BF          L761
    00000F6E D221                   MOV.L       L806+38,R2 ; _dead
    00000F70 6322                   MOV.L       @R2,R3
    00000F72 2338                   TST         R3,R3
    00000F74 8B08                   BF          L761
         Mines.c   578                dead = 1;  // Victory!
    00000F76 E301                   MOV         #1,R3
         Mines.c   579                won = 1;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F78 D11F                   MOV.L       L806+42,R1 ; _won
    00000F7A 6233                   MOV         R3,R2
         Mines.c   580                flags = totalMines;
    00000F7C D019                   MOV.L       L806+22,R0 ; _totalMines
    00000F7E 2A32                   MOV.L       R3,@R10
    00000F80 2132                   MOV.L       R3,@R1
    00000F82 6302                   MOV.L       @R0,R3
    00000F84 D216                   MOV.L       L806+18,R2 ; _flags
    00000F86 2232                   MOV.L       R3,@R2
    00000F88              L761:                             
         Mines.c   581            }
         Mines.c   582            updateBoard(board, revealed, camX, camY,
         Mines.c   583                width, height, cursorX, cursorY, dead, totalMines-flags);
    00000F88 D215                   MOV.L       L806+18,R2 ; _flags
    00000F8A 6322                   MOV.L       @R2,R3
    00000F8C D015                   MOV.L       L806+22,R0 ; _totalMines
    00000F8E 6102                   MOV.L       @R0,R1
    00000F90 3138                   SUB         R3,R1
    00000F92 2F16                   MOV.L       R1,@-R15
    00000F94 61A2                   MOV.L       @R10,R1
    00000F96 2F16                   MOV.L       R1,@-R15
    00000F98 60D2                   MOV.L       @R13,R0
    00000F9A 2F06                   MOV.L       R0,@-R15
    00000F9C 61E2                   MOV.L       @R14,R1
    00000F9E 2F16                   MOV.L       R1,@-R15
    00000FA0 6082                   MOV.L       @R8,R0
    00000FA2 2F06                   MOV.L       R0,@-R15
    00000FA4 D00A                   MOV.L       L806+2,R0  ; _width
    00000FA6 6102                   MOV.L       @R0,R1
    00000FA8 2F16                   MOV.L       R1,@-R15
    00000FAA              L776:                             
    00000FAA 67B2                   MOV.L       @R11,R7
    00000FAC D50E                   MOV.L       L806+26,R5 ; _revealed
    00000FAE D40F                   MOV.L       L806+30,R4 ; _board
    00000FB0 BB94                   BSR         _updateBoard
    00000FB2 66C2                   MOV.L       @R12,R6
    00000FB4 AEB2                   BRA         L739
    00000FB6 7F18                   ADD         #24,R15
    00000FB8              L759:                             
         Mines.c   584        }
         Mines.c   585    }
    00000FB8 7F04                   ADD         #4,R15
    00000FBA 4F16                   LDS.L       @R15+,MACL
    00000FBC 4F26                   LDS.L       @R15+,PR
    00000FBE 68F6                   MOV.L       @R15+,R8
    00000FC0 69F6                   MOV.L       @R15+,R9
    00000FC2 6AF6                   MOV.L       @R15+,R10
    00000FC4 6BF6                   MOV.L       @R15+,R11
    00000FC6 6CF6                   MOV.L       @R15+,R12
    00000FC8 6DF6                   MOV.L       @R15+,R13
    00000FCA 000B                   RTS
    00000FCC 6EF6                   MOV.L       @R15+,R14
    00000FCE              L806:                             
    00000FCE 0000                   .DATA.W     0
    00000FD0 <00000000>             .DATA.L     _width
    00000FD4 <00000000>             .DATA.L     _maxCamX
    00000FD8 <00000000>             .DATA.L     _cursorX




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FDC <00000000>             .DATA.L     _started
    00000FE0 <00000000>             .DATA.L     _flags
    00000FE4 <00000000>             .DATA.L     _totalMines
    00000FE8 <00000000>             .DATA.L     _revealed
    00000FEC <00000000>             .DATA.L     _board
    00000FF0 <00000000>             .DATA.L     _cellsOpened
    00000FF4 <00000000>             .DATA.L     _dead
    00000FF8 <00000000>             .DATA.L     _won
         Mines.c   586    
         Mines.c   587    int titleScreen() {
    00000FFC              _titleScreen:                    ; function: titleScreen
                                                           ; frame size=16
    00000FFC 2FE6                   MOV.L       R14,@-R15
    00000FFE 2FD6                   MOV.L       R13,@-R15
    00001000 4F22                   STS.L       PR,@-R15
    00001002 7FFC                   ADD         #-4,R15
         Mines.c   588        unsigned int key;
         Mines.c   589    
         Mines.c   590        Bdisp_AllClr_DDVRAM();
    00001004 D33E                   MOV.L       L808+4,R3  ; _Bdisp_AllClr_DDVRAM
    00001006 430B                   JSR         @R3
    00001008 0009                   NOP
         Mines.c   591        locate(3,2);
    0000100A E502                   MOV         #2,R5
    0000100C DE3D                   MOV.L       L808+8,R14 ; _locate
    0000100E 4E0B                   JSR         @R14
    00001010 E403                   MOV         #3,R4
         Mines.c   592        Print("MINESWEEPER");
    00001012 DD3D                   MOV.L       L808+12,R13; _Print
    00001014 D43D                   MOV.L       L808+16,R4 ; L540
    00001016 4D0B                   JSR         @R13
    00001018 0009                   NOP
         Mines.c   593        locate(3,4);
    0000101A E504                   MOV         #4,R5
    0000101C 4E0B                   JSR         @R14
    0000101E E403                   MOV         #3,R4
         Mines.c   594        Print("Controls");
    00001020 D43B                   MOV.L       L808+20,R4 ; L541
    00001022 4D0B                   JSR         @R13
    00001024 0009                   NOP
         Mines.c   595        locate(3,5);
    00001026 E505                   MOV         #5,R5
    00001028 4E0B                   JSR         @R14
    0000102A E403                   MOV         #3,R4
         Mines.c   596        Print(" 7: Open / Chord");
    0000102C D439                   MOV.L       L808+24,R4 ; L542
    0000102E 4D0B                   JSR         @R13
    00001030 0009                   NOP
         Mines.c   597        locate(3,6);
    00001032 E506                   MOV         #6,R5
    00001034 4E0B                   JSR         @R14
    00001036 E403                   MOV         #3,R4
         Mines.c   598        Print(" 8: Flag");
    00001038 D437                   MOV.L       L808+28,R4 ; L543
    0000103A 4D0B                   JSR         @R13
    0000103C 0009                   NOP
         Mines.c   599        locate(3,7);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000103E E507                   MOV         #7,R5
    00001040 4E0B                   JSR         @R14
    00001042 E403                   MOV         #3,R4
         Mines.c   600        Print("EXE to continue");
    00001044 D435                   MOV.L       L808+32,R4 ; L544
    00001046 4D0B                   JSR         @R13
    00001048 0009                   NOP
    0000104A DD35                   MOV.L       L808+36,R13; _GetKey
    0000104C 9E56                   MOV.W       L808,R14   ; H'7534
         Mines.c   601    
         Mines.c   602        while(1) {
    0000104E              L763:                             
         Mines.c   603            GetKey(&key);
    0000104E 4D0B                   JSR         @R13
    00001050 64F3                   MOV         R15,R4
         Mines.c   604            if(key == KEY_CTRL_EXE) {
    00001052 63F2                   MOV.L       @R15,R3
    00001054 33E0                   CMP/EQ      R14,R3
    00001056 8BFA                   BF          L763
         Mines.c   605                break;
         Mines.c   606            }
         Mines.c   607        }
         Mines.c   608        difficultySelect();
    00001058 B005                   BSR         _difficultySelect
    0000105A 0009                   NOP
         Mines.c   609    }
    0000105C 7F04                   ADD         #4,R15
    0000105E 4F26                   LDS.L       @R15+,PR
    00001060 6DF6                   MOV.L       @R15+,R13
    00001062 000B                   RTS
    00001064 6EF6                   MOV.L       @R15+,R14
         Mines.c   610    
         Mines.c   611    int difficultySelect() {
    00001066              _difficultySelect:               ; function: difficultySelect
                                                           ; frame size=4
    00001066 7FFC                   ADD         #-4,R15
         Mines.c   612        unsigned int key;
         Mines.c   613        started = 0;
    00001068 D12E                   MOV.L       L808+40,R1 ; _started
    0000106A E200                   MOV         #0,R2
         Mines.c   614        Bdisp_AllClr_DDVRAM();
    0000106C D324                   MOV.L       L808+4,R3  ; _Bdisp_AllClr_DDVRAM
    0000106E 430B                   JSR         @R3
    00001070 2122                   MOV.L       R2,@R1
         Mines.c   615        locate(3,2);
    00001072 E502                   MOV         #2,R5
    00001074 DE23                   MOV.L       L808+8,R14 ; _locate
    00001076 4E0B                   JSR         @R14
    00001078 E403                   MOV         #3,R4
         Mines.c   616        Print("SELECT");
    0000107A DD23                   MOV.L       L808+12,R13; _Print
    0000107C D42A                   MOV.L       L808+44,R4 ; L549
    0000107E 4D0B                   JSR         @R13
    00001080 0009                   NOP
         Mines.c   617        locate(3,4);
    00001082 E504                   MOV         #4,R5
    00001084 4E0B                   JSR         @R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001086 E403                   MOV         #3,R4
         Mines.c   618        Print("1: Easy");
    00001088 D428                   MOV.L       L808+48,R4 ; L550
    0000108A 4D0B                   JSR         @R13
    0000108C 0009                   NOP
         Mines.c   619        locate(3,5);
    0000108E E505                   MOV         #5,R5
    00001090 4E0B                   JSR         @R14
    00001092 E403                   MOV         #3,R4
         Mines.c   620        Print("2: Medium");
    00001094 D426                   MOV.L       L808+52,R4 ; L551
    00001096 4D0B                   JSR         @R13
    00001098 0009                   NOP
         Mines.c   621        locate(3,6);
    0000109A E506                   MOV         #6,R5
    0000109C 4E0B                   JSR         @R14
    0000109E E403                   MOV         #3,R4
         Mines.c   622        Print("3: Hard");
    000010A0 D424                   MOV.L       L808+56,R4 ; L552
    000010A2 4D0B                   JSR         @R13
    000010A4 0009                   NOP
         Mines.c   623        locate(3,7);
    000010A6 E507                   MOV         #7,R5
    000010A8 4E0B                   JSR         @R14
    000010AA E403                   MOV         #3,R4
         Mines.c   624        Print("4: Extreme");
    000010AC D422                   MOV.L       L808+60,R4 ; L553
    000010AE 4D0B                   JSR         @R13
    000010B0 0009                   NOP
         Mines.c   625        while(1) {
    000010B2              L767:                             
         Mines.c   626            GetKey(&key);
    000010B2 DE1B                   MOV.L       L808+36,R14; _GetKey
    000010B4 4E0B                   JSR         @R14
    000010B6 64F3                   MOV         R15,R4
         Mines.c   627            switch(key) {
    000010B8 D620                   MOV.L       L808+64,R6 ; _height
    000010BA EE10                   MOV         #16,R14
    000010BC D520                   MOV.L       L808+68,R5 ; _width
    000010BE D421                   MOV.L       L808+72,R4 ; _totalMines
    000010C0 60F2                   MOV.L       @R15,R0
    000010C2 8831                   CMP/EQ      #49,R0
    000010C4 8D0B                   BT/S        L625
    000010C6 E71E                   MOV         #30,R7
    000010C8 8832                   CMP/EQ      #50,R0
    000010CA 890D                   BT          L626
    000010CC 8833                   CMP/EQ      #51,R0
    000010CE 8910                   BT          L627
    000010D0 8834                   CMP/EQ      #52,R0
    000010D2 8939                   BT          L628
    000010D4 9113                   MOV.W       L808+2,R1  ; H'7532
    000010D6 3010                   CMP/EQ      R1,R0
    000010D8 893E                   BT          L629
    000010DA AFEA                   BRA         L767
    000010DC 0009                   NOP
    000010DE              L625:                            ; case label 
         Mines.c   628                case KEY_CHAR_1:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Mines.c   629                    width = 9;
    000010DE E709                   MOV         #9,R7
    000010E0 2572                   MOV.L       R7,@R5
         Mines.c   630                    height = 9;
    000010E2 2672                   MOV.L       R7,@R6
    000010E4 A003                   BRA         L777
         Mines.c   631                    totalMines = 10;
    000010E6 E50A                   MOV         #10,R5
    000010E8              L626:                            ; case label 
         Mines.c   632                    game();
         Mines.c   633                    break;
         Mines.c   634                case KEY_CHAR_2:
         Mines.c   635                    width = 16;
    000010E8 25E2                   MOV.L       R14,@R5
         Mines.c   636                    height = 16;
         Mines.c   637                    totalMines = 40;
    000010EA E528                   MOV         #40,R5
    000010EC 26E2                   MOV.L       R14,@R6
    000010EE              L777:                             
    000010EE A02F                   BRA         L577
    000010F0 2452                   MOV.L       R5,@R4
    000010F2              L627:                            ; case label 
         Mines.c   638                    game();
         Mines.c   639                    break;
         Mines.c   640                case KEY_CHAR_3:
         Mines.c   641                    width = 30;
    000010F2 2572                   MOV.L       R7,@R5
         Mines.c   642                    height = 16;
    000010F4 26E2                   MOV.L       R14,@R6
         Mines.c   643                    totalMines = 99;
    000010F6 E563                   MOV         #99,R5
    000010F8 A02A                   BRA         L577
    000010FA 2452                   MOV.L       R5,@R4
    000010FC              L808:                             
    000010FC 7534                   .DATA.W     H'7534
    000010FE 7532                   .DATA.W     H'7532
    00001100 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001104 <00000000>             .DATA.L     _locate
    00001108 <00000000>             .DATA.L     _Print
    0000110C <00000000>             .DATA.L     L540
    00001110 <00000000>             .DATA.L     L541
    00001114 <00000000>             .DATA.L     L542
    00001118 <00000000>             .DATA.L     L543
    0000111C <00000000>             .DATA.L     L544
    00001120 <00000000>             .DATA.L     _GetKey
    00001124 <00000000>             .DATA.L     _started
    00001128 <00000000>             .DATA.L     L549
    0000112C <00000000>             .DATA.L     L550
    00001130 <00000000>             .DATA.L     L551
    00001134 <00000000>             .DATA.L     L552
    00001138 <00000000>             .DATA.L     L553
    0000113C <00000000>             .DATA.L     _height
    00001140 <00000000>             .DATA.L     _width
    00001144 <00000000>             .DATA.L     _totalMines
    00001148              L628:                            ; case label 
         Mines.c   644                    game();
         Mines.c   645                    break;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Mines.c   646                case KEY_CHAR_4:
         Mines.c   647                    width = 30;
    00001148 2572                   MOV.L       R7,@R5
         Mines.c   648                    height = 30;
    0000114A 2672                   MOV.L       R7,@R6
         Mines.c   649                    totalMines = 200;
    0000114C 954A                   MOV.W       L809,R5    ; H'00C8
    0000114E 2452                   MOV.L       R5,@R4
    00001150              L577:
         Mines.c   650                    game();
    00001150 BD58                   BSR         _game
    00001152 0009                   NOP
         Mines.c   651                    break;
    00001154 AFAD                   BRA         L767
    00001156 0009                   NOP
    00001158              L629:                            ; case label 
         Mines.c   652                case KEY_CTRL_EXIT:
         Mines.c   653                    titleScreen();
    00001158 BF50                   BSR         _titleScreen
    0000115A 0009                   NOP
    0000115C AFA9                   BRA         L767
    0000115E 0009                   NOP
         Mines.c   654            }
         Mines.c   655        }
         Mines.c   656    }
         Mines.c   657    
         Mines.c   658    int backgroundTick() {
    00001160              _backgroundTick:                 ; function: backgroundTick
                                                           ; frame size=16
    00001160 4F22                   STS.L       PR,@-R15
         Mines.c   659        if(Bdisp_GetPoint_VRAM(0,0)) {
    00001162 E500                   MOV         #0,R5
    00001164 D320                   MOV.L       L809+4,R3  ; _Bdisp_GetPoint_VRAM
    00001166 430B                   JSR         @R3
    00001168 6453                   MOV         R5,R4
    0000116A 2008                   TST         R0,R0
    0000116C 8B2F                   BF          L770
         Mines.c   660            return;
         Mines.c   661        }
         Mines.c   662        SetTimer(ID_USER_TIMER1, 100, backgroundTick);
    0000116E E564                   MOV         #100,R5
    00001170 D31F                   MOV.L       L809+12,R3 ; _SetTimer
    00001172 D61E                   MOV.L       L809+8,R6  ; _backgroundTick
    00001174 430B                   JSR         @R3
    00001176 E401                   MOV         #1,R4
         Mines.c   663        if(!started)
    00001178 D41E                   MOV.L       L809+16,R4 ; _started
    0000117A 6242                   MOV.L       @R4,R2
    0000117C 2228                   TST         R2,R2
    0000117E 8B03                   BF          L771
         Mines.c   664            ++rSeed;
    00001180 D51D                   MOV.L       L809+20,R5 ; _rSeed
    00001182 6352                   MOV.L       @R5,R3
    00001184 7301                   ADD         #1,R3
    00001186 2532                   MOV.L       R3,@R5
    00001188              L771:                             
         Mines.c   665        if(started && !dead) {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001188 6242                   MOV.L       @R4,R2
    0000118A 2228                   TST         R2,R2
    0000118C 891F                   BT          L770
    0000118E D11B                   MOV.L       L809+24,R1 ; _dead
    00001190 6212                   MOV.L       @R1,R2
    00001192 2228                   TST         R2,R2
    00001194 8B1B                   BF          L770
         Mines.c   666            drawUI(board,revealed,totalMines-flags,width,height,cursorX,cursorY);
    00001196 D11A                   MOV.L       L809+28,R1 ; _cursorY
    00001198 D01A                   MOV.L       L809+32,R0 ; _cursorX
    0000119A 6212                   MOV.L       @R1,R2
    0000119C D11B                   MOV.L       L809+40,R1 ; _width
    0000119E 2F26                   MOV.L       R2,@-R15
    000011A0 6302                   MOV.L       @R0,R3
    000011A2 2F36                   MOV.L       R3,@-R15
    000011A4 D318                   MOV.L       L809+36,R3 ; _height
    000011A6 6232                   MOV.L       @R3,R2
    000011A8 D51B                   MOV.L       L809+52,R5 ; _revealed
    000011AA 2F26                   MOV.L       R2,@-R15
    000011AC 6712                   MOV.L       @R1,R7
    000011AE D218                   MOV.L       L809+44,R2 ; _flags
    000011B0 D118                   MOV.L       L809+48,R1 ; _totalMines
    000011B2 6322                   MOV.L       @R2,R3
    000011B4 6612                   MOV.L       @R1,R6
    000011B6 D419                   MOV.L       L809+56,R4 ; _board
    000011B8 D219                   MOV.L       L809+60,R2 ; _drawUI
    000011BA 420B                   JSR         @R2
    000011BC 3638                   SUB         R3,R6
    000011BE 7F0C                   ADD         #12,R15
         Mines.c   667            ++time;
    000011C0 D418                   MOV.L       L809+64,R4 ; _time
    000011C2 6342                   MOV.L       @R4,R3
         Mines.c   668            Bdisp_PutDisp_DD();
    000011C4 D218                   MOV.L       L809+68,R2 ; _Bdisp_PutDisp_DD
    000011C6 7301                   ADD         #1,R3
    000011C8 2432                   MOV.L       R3,@R4
    000011CA 422B                   JMP         @R2
    000011CC 4F26                   LDS.L       @R15+,PR
    000011CE              L770:                             
         Mines.c   669        }
         Mines.c   670    }
    000011CE 4F26                   LDS.L       @R15+,PR
    000011D0 000B                   RTS
    000011D2 0009                   NOP
         Mines.c   671    
         Mines.c   672    int AddIn_main(int isAppli, unsigned short OptionNum)
    000011D4              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=4
    000011D4 4F22                   STS.L       PR,@-R15
         Mines.c   673    {
         Mines.c   674        backgroundTick();
    000011D6 BFC3                   BSR         _backgroundTick
    000011D8 0009                   NOP
         Mines.c   675        titleScreen();
    000011DA BF0F                   BSR         _titleScreen
    000011DC 0009                   NOP
         Mines.c   676    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Mines.c   677        return 1;
         Mines.c   678    }
    000011DE 4F26                   LDS.L       @R15+,PR
    000011E0 000B                   RTS
    000011E2 E001                   MOV         #1,R0
    000011E4              L809:                             
    000011E4 00C8                   .DATA.W     H'00C8
    000011E6 0000                   .DATA.W     0
    000011E8 <00000000>             .DATA.L     _Bdisp_GetPoint_VRAM
    000011EC <00000000>             .DATA.L     _backgroundTick
    000011F0 <00000000>             .DATA.L     _SetTimer
    000011F4 <00000000>             .DATA.L     _started
    000011F8 <00000000>             .DATA.L     _rSeed
    000011FC <00000000>             .DATA.L     _dead
    00001200 <00000000>             .DATA.L     _cursorY
    00001204 <00000000>             .DATA.L     _cursorX
    00001208 <00000000>             .DATA.L     _height
    0000120C <00000000>             .DATA.L     _width
    00001210 <00000000>             .DATA.L     _flags
    00001214 <00000000>             .DATA.L     _totalMines
    00001218 <00000000>             .DATA.L     _revealed
    0000121C <00000000>             .DATA.L     _board
    00001220 <00000000>             .DATA.L     _drawUI
    00001224 <00000000>             .DATA.L     _time
    00001228 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
         Mines.c   679    
         Mines.c   680    
         Mines.c   681    //****************************************************************************
         Mines.c   682    //**************                                              ****************
         Mines.c   683    //**************                 Notice!                      ****************
         Mines.c   684    //**************                                              ****************
         Mines.c   685    //**************  Please do not change the following source.  ****************
         Mines.c   686    //**************                                              ****************
         Mines.c   687    //****************************************************************************
         Mines.c   688    
         Mines.c   689    
         Mines.c   690    #pragma section _BR_Size
         Mines.c   691    unsigned long BR_Size;
         Mines.c   692    #pragma section
         Mines.c   693    
         Mines.c   694    
         Mines.c   695    #pragma section _TOP
         Mines.c   696    
         Mines.c   697    //****************************************************************************
         Mines.c   698    //  InitializeSystem
         Mines.c   699    //
         Mines.c   700    //  param   :   isAppli   : 1 = Application / 0 = eActivity
         Mines.c   701    //              OptionNum : Option Number (only eActivity)
         Mines.c   702    //
         Mines.c   703    //  retval  :   1 = No error / 0 = Error
         Mines.c   704    //
         Mines.c   705    //****************************************************************************
         Mines.c   706    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
         Mines.c   707    {
         Mines.c   708        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000000 D301                   MOV.L       L810+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L810:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
         Mines.c   709    }
         Mines.c   710    
         Mines.c   711    #pragma section
         Mines.c   712    
D   00000000              _rSeed:                          ; static: rSeed
    00000000 00000000               .DATA.L     H'00000000
    00000004              _time:                           ; static: time
    00000004 00000000               .DATA.L     H'00000000
    00000008              _started:                        ; static: started
    00000008 00000000               .DATA.L     H'00000000
    0000000C              _dead:                           ; static: dead
    0000000C 00000000               .DATA.L     H'00000000
    00000010              _won:                            ; static: won
    00000010 00000000               .DATA.L     H'00000000
    00000014              _flags:                          ; static: flags
    00000014 00000000               .DATA.L     H'00000000
    00000018              _cellsOpened:                    ; static: cellsOpened
    00000018 00000000               .DATA.L     H'00000000
    0000001C              _graphs:                         ; static: graphs
    0000001C 0000000A00             .DATA.L     H'0000000A,H'0000000A
             00000A       
    00000024 <00000000>             .DATA.L     L319
    00000028 0000000A00             .DATA.L     H'0000000A,H'0000000A
             00000A       
    00000030 <00000000>             .DATA.L     L320
    00000034 0000000A00             .DATA.L     H'0000000A,H'0000000A
             00000A       
    0000003C <00000000>             .DATA.L     L321
    00000040 0000000A00             .DATA.L     H'0000000A,H'0000000A
             00000A       
    00000048 <00000000>             .DATA.L     L322
    0000004C 0000000A00             .DATA.L     H'0000000A,H'0000000A
             00000A       
    00000054 <00000000>             .DATA.L     L323
    00000058 0000000A00             .DATA.L     H'0000000A,H'0000000A
             00000A       
    00000060 <00000000>             .DATA.L     L324
    00000064 0000000A00             .DATA.L     H'0000000A,H'0000000A
             00000A       
    0000006C <00000000>             .DATA.L     L325
    00000070 0000000A00             .DATA.L     H'0000000A,H'0000000A
             00000A       
    00000078 <00000000>             .DATA.L     L326
    0000007C 0000000A00             .DATA.L     H'0000000A,H'0000000A
             00000A       
    00000084 <00000000>             .DATA.L     L327
    00000088 0000000A00             .DATA.L     H'0000000A,H'0000000A
             00000A       
    00000090 <00000000>             .DATA.L     L328
    00000094 0000000A00             .DATA.L     H'0000000A,H'0000000A
             00000A       




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000009C <00000000>             .DATA.L     L329
    000000A0 0000000A00             .DATA.L     H'0000000A,H'0000000A
             00000A       
    000000A8 <00000000>             .DATA.L     L330
    000000AC 0000000A00             .DATA.L     H'0000000A,H'0000000A
             00000A       
    000000B4 <00000000>             .DATA.L     L331
    000000B8 0000001100             .DATA.L     H'00000011,H'0000000B
             00000B       
    000000C0 <00000000>             .DATA.L     L332
    000000C4 0000000500             .DATA.L     H'00000005,H'00000008
             000008       
    000000CC <00000000>             .DATA.L     L333
    000000D0 0000000600             .DATA.L     H'00000006,H'00000006
             000006       
    000000D8 <00000000>             .DATA.L     L334
C   00000000              L540:
    00000000 4D494E4553             .SDATA      "MINESWEEPER"
             5745455045   
             52           
    0000000B 00                     .DATA.B     H'00
    0000000C              L541:
    0000000C 436F6E7472             .SDATA      "Controls"
             6F6C73       
    00000014 00                     .DATA.B     H'00
    00000015 00000001               .RES.B      1
    00000016 00000002               .RES.W      1
    00000018              L542:
    00000018 20373A204F             .SDATA      " 7: Open / Chord"
             70656E202F   
             2043686F72   
             64           
    00000028 00                     .DATA.B     H'00
    00000029 00000001               .RES.B      1
    0000002A 00000002               .RES.W      1
    0000002C              L543:
    0000002C 20383A2046             .SDATA      " 8: Flag"
             6C6167       
    00000034 00                     .DATA.B     H'00
    00000035 00000001               .RES.B      1
    00000036 00000002               .RES.W      1
    00000038              L544:
    00000038 4558452074             .SDATA      "EXE to continue"
             6F20636F6E   
             74696E7565   
    00000047 00                     .DATA.B     H'00
    00000048              L549:
    00000048 53454C4543             .SDATA      "SELECT"
             54           
    0000004E 00                     .DATA.B     H'00
    0000004F 00000001               .RES.B      1
    00000050              L550:
    00000050 313A204561             .SDATA      "1: Easy"
             7379         
    00000057 00                     .DATA.B     H'00
    00000058              L551:
    00000058 323A204D65             .SDATA      "2: Medium"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             6469756D     
    00000061 00                     .DATA.B     H'00
    00000062 00000002               .RES.W      1
    00000064              L552:
    00000064 333A204861             .SDATA      "3: Hard"
             7264         
    0000006B 00                     .DATA.B     H'00
    0000006C              L553:
    0000006C 343A204578             .SDATA      "4: Extreme"
             7472656D65   
    00000076 00                     .DATA.B     H'00
    00000077 00000001               .RES.B      1
    00000078              L319:
    00000078 FFC080                 .DATA.B     H'FF,H'C0,H'80
    0000007B 40                     .SDATA      "@"
    0000007C 80                     .DATA.B     H'80
    0000007D 40                     .SDATA      "@"
    0000007E 80                     .DATA.B     H'80
    0000007F 40                     .SDATA      "@"
    00000080 80                     .DATA.B     H'80
    00000081 40                     .SDATA      "@"
    00000082 80                     .DATA.B     H'80
    00000083 40                     .SDATA      "@"
    00000084 80                     .DATA.B     H'80
    00000085 40                     .SDATA      "@"
    00000086 80                     .DATA.B     H'80
    00000087 40                     .SDATA      "@"
    00000088 80                     .DATA.B     H'80
    00000089 40                     .SDATA      "@"
    0000008A FFC000                 .DATA.B     H'FF,H'C0,H'00
    0000008D 00000001               .RES.B      1
    0000008E 00000002               .RES.W      1
    00000090              L320:
    00000090 FFC080                 .DATA.B     H'FF,H'C0,H'80
    00000093 40                     .SDATA      "@"
    00000094 8C                     .DATA.B     H'8C
    00000095 40                     .SDATA      "@"
    00000096 84                     .DATA.B     H'84
    00000097 40                     .SDATA      "@"
    00000098 84                     .DATA.B     H'84
    00000099 40                     .SDATA      "@"
    0000009A 84                     .DATA.B     H'84
    0000009B 40                     .SDATA      "@"
    0000009C 84                     .DATA.B     H'84
    0000009D 40                     .SDATA      "@"
    0000009E 8E                     .DATA.B     H'8E
    0000009F 40                     .SDATA      "@"
    000000A0 80                     .DATA.B     H'80
    000000A1 40                     .SDATA      "@"
    000000A2 FFC000                 .DATA.B     H'FF,H'C0,H'00
    000000A5 00000001               .RES.B      1
    000000A6 00000002               .RES.W      1
    000000A8              L321:
    000000A8 FFC080                 .DATA.B     H'FF,H'C0,H'80
    000000AB 40                     .SDATA      "@"
    000000AC 8C                     .DATA.B     H'8C
    000000AD 40                     .SDATA      "@"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000AE 92                     .DATA.B     H'92
    000000AF 40                     .SDATA      "@"
    000000B0 82                     .DATA.B     H'82
    000000B1 40                     .SDATA      "@"
    000000B2 84                     .DATA.B     H'84
    000000B3 40                     .SDATA      "@"
    000000B4 88                     .DATA.B     H'88
    000000B5 40                     .SDATA      "@"
    000000B6 9E                     .DATA.B     H'9E
    000000B7 40                     .SDATA      "@"
    000000B8 80                     .DATA.B     H'80
    000000B9 40                     .SDATA      "@"
    000000BA FFC000                 .DATA.B     H'FF,H'C0,H'00
    000000BD 00000001               .RES.B      1
    000000BE 00000002               .RES.W      1
    000000C0              L322:
    000000C0 FFC080                 .DATA.B     H'FF,H'C0,H'80
    000000C3 40                     .SDATA      "@"
    000000C4 9E                     .DATA.B     H'9E
    000000C5 40                     .SDATA      "@"
    000000C6 82                     .DATA.B     H'82
    000000C7 40                     .SDATA      "@"
    000000C8 8C                     .DATA.B     H'8C
    000000C9 40                     .SDATA      "@"
    000000CA 82                     .DATA.B     H'82
    000000CB 40                     .SDATA      "@"
    000000CC 92                     .DATA.B     H'92
    000000CD 40                     .SDATA      "@"
    000000CE 8C                     .DATA.B     H'8C
    000000CF 40                     .SDATA      "@"
    000000D0 80                     .DATA.B     H'80
    000000D1 40                     .SDATA      "@"
    000000D2 FFC000                 .DATA.B     H'FF,H'C0,H'00
    000000D5 00000001               .RES.B      1
    000000D6 00000002               .RES.W      1
    000000D8              L323:
    000000D8 FFC080                 .DATA.B     H'FF,H'C0,H'80
    000000DB 40                     .SDATA      "@"
    000000DC 90                     .DATA.B     H'90
    000000DD 40                     .SDATA      "@"
    000000DE 94                     .DATA.B     H'94
    000000DF 40                     .SDATA      "@"
    000000E0 94                     .DATA.B     H'94
    000000E1 40                     .SDATA      "@"
    000000E2 9E                     .DATA.B     H'9E
    000000E3 40                     .SDATA      "@"
    000000E4 84                     .DATA.B     H'84
    000000E5 40                     .SDATA      "@"
    000000E6 84                     .DATA.B     H'84
    000000E7 40                     .SDATA      "@"
    000000E8 80                     .DATA.B     H'80
    000000E9 40                     .SDATA      "@"
    000000EA FFC000                 .DATA.B     H'FF,H'C0,H'00
    000000ED 00000001               .RES.B      1
    000000EE 00000002               .RES.W      1
    000000F0              L324:
    000000F0 FFC080                 .DATA.B     H'FF,H'C0,H'80




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000F3 40                     .SDATA      "@"
    000000F4 9E                     .DATA.B     H'9E
    000000F5 40                     .SDATA      "@"
    000000F6 90                     .DATA.B     H'90
    000000F7 40                     .SDATA      "@"
    000000F8 9C                     .DATA.B     H'9C
    000000F9 40                     .SDATA      "@"
    000000FA 82                     .DATA.B     H'82
    000000FB 40                     .SDATA      "@"
    000000FC 92                     .DATA.B     H'92
    000000FD 40                     .SDATA      "@"
    000000FE 8C                     .DATA.B     H'8C
    000000FF 40                     .SDATA      "@"
    00000100 80                     .DATA.B     H'80
    00000101 40                     .SDATA      "@"
    00000102 FFC000                 .DATA.B     H'FF,H'C0,H'00
    00000105 00000001               .RES.B      1
    00000106 00000002               .RES.W      1
    00000108              L325:
    00000108 FFC080                 .DATA.B     H'FF,H'C0,H'80
    0000010B 40                     .SDATA      "@"
    0000010C 8C                     .DATA.B     H'8C
    0000010D 40                     .SDATA      "@"
    0000010E 92                     .DATA.B     H'92
    0000010F 40                     .SDATA      "@"
    00000110 90                     .DATA.B     H'90
    00000111 40                     .SDATA      "@"
    00000112 9C                     .DATA.B     H'9C
    00000113 40                     .SDATA      "@"
    00000114 92                     .DATA.B     H'92
    00000115 40                     .SDATA      "@"
    00000116 8C                     .DATA.B     H'8C
    00000117 40                     .SDATA      "@"
    00000118 80                     .DATA.B     H'80
    00000119 40                     .SDATA      "@"
    0000011A FFC000                 .DATA.B     H'FF,H'C0,H'00
    0000011D 00000001               .RES.B      1
    0000011E 00000002               .RES.W      1
    00000120              L326:
    00000120 FFC080                 .DATA.B     H'FF,H'C0,H'80
    00000123 40                     .SDATA      "@"
    00000124 9E                     .DATA.B     H'9E
    00000125 40                     .SDATA      "@"
    00000126 92                     .DATA.B     H'92
    00000127 40                     .SDATA      "@"
    00000128 92                     .DATA.B     H'92
    00000129 40                     .SDATA      "@"
    0000012A 84                     .DATA.B     H'84
    0000012B 40                     .SDATA      "@"
    0000012C 84                     .DATA.B     H'84
    0000012D 40                     .SDATA      "@"
    0000012E 84                     .DATA.B     H'84
    0000012F 40                     .SDATA      "@"
    00000130 80                     .DATA.B     H'80
    00000131 40                     .SDATA      "@"
    00000132 FFC000                 .DATA.B     H'FF,H'C0,H'00
    00000135 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000136 00000002               .RES.W      1
    00000138              L327:
    00000138 FFC080                 .DATA.B     H'FF,H'C0,H'80
    0000013B 40                     .SDATA      "@"
    0000013C 8C                     .DATA.B     H'8C
    0000013D 40                     .SDATA      "@"
    0000013E 92                     .DATA.B     H'92
    0000013F 40                     .SDATA      "@"
    00000140 8C                     .DATA.B     H'8C
    00000141 40                     .SDATA      "@"
    00000142 92                     .DATA.B     H'92
    00000143 40                     .SDATA      "@"
    00000144 92                     .DATA.B     H'92
    00000145 40                     .SDATA      "@"
    00000146 8C                     .DATA.B     H'8C
    00000147 40                     .SDATA      "@"
    00000148 80                     .DATA.B     H'80
    00000149 40                     .SDATA      "@"
    0000014A FFC000                 .DATA.B     H'FF,H'C0,H'00
    0000014D 00000001               .RES.B      1
    0000014E 00000002               .RES.W      1
    00000150              L328:
    00000150 FFC080                 .DATA.B     H'FF,H'C0,H'80
    00000153 40                     .SDATA      "@"
    00000154 AD                     .DATA.B     H'AD
    00000155 40                     .SDATA      "@"
    00000156 9E                     .DATA.B     H'9E
    00000157 40                     .SDATA      "@"
    00000158 B7                     .DATA.B     H'B7
    00000159 40                     .SDATA      "@"
    0000015A BF                     .DATA.B     H'BF
    0000015B 40                     .SDATA      "@"
    0000015C 9E                     .DATA.B     H'9E
    0000015D 40                     .SDATA      "@"
    0000015E AD                     .DATA.B     H'AD
    0000015F 40                     .SDATA      "@"
    00000160 80                     .DATA.B     H'80
    00000161 40                     .SDATA      "@"
    00000162 FFC000                 .DATA.B     H'FF,H'C0,H'00
    00000165 00000001               .RES.B      1
    00000166 00000002               .RES.W      1
    00000168              L329:
    00000168 FFC0FFC0F1             .DATA.B     H'FF,H'C0,H'FF,H'C0,H'F1,H'C0,H'E1,H'C0,H'F1,H'C0,H'FD,H'C0,H'FD,H'C0,H'E0,H'C0,
             C0E1C0F1C0 +                       H'FF,H'C0,H'FF,H'C0,H'00
             FDC0FDC0E0   
             C0FFC0FFC0   
             00           
    0000017D 00000001               .RES.B      1
    0000017E 00000002               .RES.W      1
    00000180              L330:
    00000180 FFC0BF                 .DATA.B     H'FF,H'C0,H'BF
    00000183 40                     .SDATA      "@"
    00000184 D0C0E1C0F1             .DATA.B     H'D0,H'C0,H'E1,H'C0,H'F1,H'C0,H'F1,H'C0,H'ED,H'C0,H'C0,H'C0,H'BF
             C0F1C0EDC0   
             C0C0BF       
    00000191 40                     .SDATA      "@"
    00000192 FFC000                 .DATA.B     H'FF,H'C0,H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000195 00000001               .RES.B      1
    00000196 00000002               .RES.W      1
    00000198              L331:
    00000198 FFC0AAC0D5             .DATA.B     H'FF,H'C0,H'AA,H'C0,H'D5
    0000019D 40                     .SDATA      "@"
    0000019E AAC0D5                 .DATA.B     H'AA,H'C0,H'D5
    000001A1 40                     .SDATA      "@"
    000001A2 AAC0D5                 .DATA.B     H'AA,H'C0,H'D5
    000001A5 40                     .SDATA      "@"
    000001A6 AAC0D5                 .DATA.B     H'AA,H'C0,H'D5
    000001A9 40                     .SDATA      "@"
    000001AA FFC000                 .DATA.B     H'FF,H'C0,H'00
    000001AD 00000001               .RES.B      1
    000001AE 00000002               .RES.W      1
    000001B0              L332:
    000001B0 7FFF00E003             .DATA.B     H'7F,H'FF,H'00,H'E0,H'03,H'80,H'C0,H'01,H'80,H'80,H'00,H'80,H'80,H'00,H'80,H'80,
             80C0018080 +                       H'00,H'80,H'80,H'00,H'80,H'80,H'00,H'80,H'C0,H'01,H'80,H'E0,H'03,H'80,H'7F,H'FF,
             0080800080 +                       H'00,H'00
             8000808000   
             80800080C0   
             0180E00380   
             7FFF0000     
    000001D2 00000002               .RES.W      1
    000001D4              L333:
    000001D4 F888F8                 .DATA.B     H'F8,H'88,H'F8
    000001D7 702050                 .SDATA      "p P"
    000001DA F8F800                 .DATA.B     H'F8,H'F8,H'00
    000001DD 00000001               .RES.B      1
    000001DE 00000002               .RES.W      1
    000001E0              L334:
    000001E0 B4                     .DATA.B     H'B4
    000001E1 78                     .SDATA      "x"
    000001E2 DCFC                   .DATA.B     H'DC,H'FC
    000001E4 78                     .SDATA      "x"
    000001E5 B400                   .DATA.B     H'B4,H'00
B   00000000              _width:                          ; static: width
    00000000 00000004               .RES.L      1
    00000004              _height:                         ; static: height
    00000004 00000004               .RES.L      1
    00000008              _totalMines:                     ; static: totalMines
    00000008 00000004               .RES.L      1
    0000000C              _minCamX:                        ; static: minCamX
    0000000C 00000004               .RES.L      1
    00000010              _minCamY:                        ; static: minCamY
    00000010 00000004               .RES.L      1
    00000014              _maxCamX:                        ; static: maxCamX
    00000014 00000004               .RES.L      1
    00000018              _maxCamY:                        ; static: maxCamY
    00000018 00000004               .RES.L      1
    0000001C              _camX:                           ; static: camX
    0000001C 00000004               .RES.L      1
    00000020              _camY:                           ; static: camY
    00000020 00000004               .RES.L      1
    00000024              _cursorX:                        ; static: cursorX
    00000024 00000004               .RES.L      1
    00000028              _cursorY:                        ; static: cursorY
    00000028 00000004               .RES.L      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000002C              _key:                            ; static: key
    0000002C 00000004               .RES.L      1
    00000030              _board:                          ; static: board
    00000030 00000E10               .RES.L      900
    00000E40              _revealed:                       ; static: revealed
    00000E40 00000E10               .RES.L      900
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1





















































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Aug-2024 11:50:20  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        15




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      712



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               0000122C Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               000001E7 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               000000DC Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00001C50 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 0000314F Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           21
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          39
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           248






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\hojooni\AppData\Local\Temp\hmk70DD.tmp 

